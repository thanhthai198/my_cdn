{"version":3,"file":"node_modules_invariant_browser_js-node_modules_react-native_Libraries_StyleSheet_PlatformColo-40e3f4.chunk.bundle","sources":["webpack:///./node_modules/invariant/browser.js","webpack:///./node_modules/react-native/Libraries/Utilities/NativePlatformConstantsIOS.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativePlatformConstantsIOS.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/processColor.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/normalizeColor.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.ios.js","webpack:///./node_modules/react-native/Libraries/Utilities/Platform.ios.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","export * from '../../src/private/specs/modules/NativePlatformConstantsIOS';\nimport NativePlatformConstantsIOS from '../../src/private/specs/modules/NativePlatformConstantsIOS';\nexport default NativePlatformConstantsIOS;","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                     \n                     \n                                \n                        \n                  \n                  \n                  \n                        \n     \n                               \n                    \n                     \n                         \n                          \n   \n                                           \n                                           \n \nexport default (TurboModuleRegistry.getEnforcing      ('PlatformConstants')      );","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n'use strict';\n\n                                                               \n\nconst Platform = require('../Utilities/Platform');\nconst normalizeColor = require('./normalizeColor');\n\n                                                            \n\n/* eslint no-bitwise: 0 */\nfunction processColor(color                         )                       {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  let normalizedColor = normalizeColor(color);\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n\n  if (typeof normalizedColor === 'object') {\n    const processColorObject =\n      require('./PlatformColorValueTypes').processColorObject;\n\n    const processedColorObj = processColorObject(normalizedColor);\n\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  }\n\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n\n  // Converts 0xrrggbbaa into 0xaarrggbb\n  normalizedColor = ((normalizedColor << 24) | (normalizedColor >>> 8)) >>> 0;\n\n  if (Platform.OS === 'android') {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    normalizedColor = normalizedColor | 0x0;\n  }\n  return normalizedColor;\n}\n\nexport default processColor;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n/* eslint no-bitwise: 0 */\n\n                                                        \n                                             \n\nimport _normalizeColor from '@react-native/normalize-colors';\n\nfunction normalizeColor(\n  color                                     ,\n)                       {\n  if (typeof color === 'object' && color != null) {\n    const {normalizeColorObject} = require('./PlatformColorValueTypes');\n    const normalizedColor = normalizeColorObject(color);\n    if (normalizedColor != null) {\n      return normalizedColor;\n    }\n  }\n\n  if (typeof color === 'string' || typeof color === 'number') {\n    return _normalizeColor(color);\n  }\n}\n\nmodule.exports = normalizeColor;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                                        \n                                                               \n\n/** The actual type of the opaque NativeColorValue on iOS platform */\n                              \n                           \n             \n                                               \n                                              \n                                                            \n                                                           \n    \n  \n\nexport const PlatformColor = (...names               )             => {\n  // $FlowExpectedError[incompatible-return] LocalNativeColorValue is the iOS LocalNativeColorValue type\n  return ({semantic: names}                       );\n};\n\n                                           \n                    \n                   \n                                 \n                                \n  \n\nexport const DynamicColorIOSPrivate = (\n  tuple                             ,\n)             => {\n  return ({\n    dynamic: {\n      light: tuple.light,\n      dark: tuple.dark,\n      highContrastLight: tuple.highContrastLight,\n      highContrastDark: tuple.highContrastDark,\n    },\n    /* $FlowExpectedError[incompatible-return]\n     * LocalNativeColorValue is the actual type of the opaque NativeColorValue on iOS platform */\n  }                       );\n};\n\nconst _normalizeColorObject = (\n  color                       ,\n)                         => {\n  if ('semantic' in color) {\n    // an ios semantic color\n    return color;\n  } else if ('dynamic' in color && color.dynamic !== undefined) {\n    const normalizeColor = require('./normalizeColor');\n\n    // a dynamic, appearance aware color\n    const dynamic = color.dynamic;\n    const dynamicColor                        = {\n      dynamic: {\n        // $FlowFixMe[incompatible-use]\n        light: normalizeColor(dynamic.light),\n        // $FlowFixMe[incompatible-use]\n        dark: normalizeColor(dynamic.dark),\n        // $FlowFixMe[incompatible-use]\n        highContrastLight: normalizeColor(dynamic.highContrastLight),\n        // $FlowFixMe[incompatible-use]\n        highContrastDark: normalizeColor(dynamic.highContrastDark),\n      },\n    };\n    return dynamicColor;\n  }\n  return null;\n};\n\nexport const normalizeColorObject   \n                          \n                                          \n                                                                                               \n                          = _normalizeColorObject;\n\nconst _processColorObject = (\n  color                       ,\n)                         => {\n  if ('dynamic' in color && color.dynamic != null) {\n    const processColor = require('./processColor').default;\n    const dynamic = color.dynamic;\n    const dynamicColor                        = {\n      dynamic: {\n        // $FlowFixMe[incompatible-use]\n        light: processColor(dynamic.light),\n        // $FlowFixMe[incompatible-use]\n        dark: processColor(dynamic.dark),\n        // $FlowFixMe[incompatible-use]\n        highContrastLight: processColor(dynamic.highContrastLight),\n        // $FlowFixMe[incompatible-use]\n        highContrastDark: processColor(dynamic.highContrastDark),\n      },\n    };\n    return dynamicColor;\n  }\n  return color;\n};\n\nexport const processColorObject   \n                          \n                                          \n                                                                                               \n                       = _processColorObject;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n             \n                           \n                     \n                         \n\nimport NativePlatformConstantsIOS from './NativePlatformConstantsIOS';\n\nconst Platform               = {\n  __constants: null,\n  OS: 'ios',\n  // $FlowFixMe[unsafe-getters-setters]\n  get Version()         {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.osVersion;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get constants()    \n                                 \n                           \n                       \n                                  \n                      \n                          \n                    \n                    \n                    \n                          \n       \n                       \n                            \n     {\n    // $FlowFixMe[object-this-reference]\n    if (this.__constants == null) {\n      // $FlowFixMe[object-this-reference]\n      this.__constants = NativePlatformConstantsIOS.getConstants();\n    }\n    // $FlowFixMe[object-this-reference]\n    return this.__constants;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isPad()          {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'pad';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTV()          {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'tv';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isVision()          {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'vision';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTesting()          {\n    if (__DEV__) {\n      // $FlowFixMe[object-this-reference]\n      return this.constants.isTesting;\n    }\n    return false;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isDisableAnimations()          {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.isDisableAnimations ?? this.isTesting;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isMacCatalyst()          {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.isMacCatalyst ?? false;\n  },\n  select:    (spec                       )    =>\n    // $FlowFixMe[incompatible-return]\n    'ios' in spec ? spec.ios : 'native' in spec ? spec.native : spec.default,\n};\n\nmodule.exports = Platform;\n"],"names":["invariant","condition","format","a","b","c","d","e","f","process","undefined","Error","error","args","argIndex","module","_default","_NativePlatformConstantsIOS","_TurboModuleRegistry","Platform","require","normalizeColor","processColor","color","normalizedColor","_type_of","processColorObject","processedColorObj","normalizeColorObject","_normalizecolors","DynamicColorIOSPrivate","PlatformColor","names","tuple","_normalizeColorObject","dynamic","dynamicColor","_processColorObject","__DEV__","_this_constants_isDisableAnimations","_this_constants_isMacCatalyst","spec"],"mappings":";;;AAAA;;;;;CAKC,GAEY;AAEb;;;;;;;;;CASC,GAED,IAAIA,YAAY,mBAASC,SAAS,EAAEC,MAAM,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC;IAC1D,IAAIC,KAAqC,EAAE,EAI1C;IAED,IAAI,CAACR,WAAW;QACd,IAAIW;QACJ,IAAIV,WAAWQ,WAAW;YACxBE,QAAQ,IAAID,MACV,uEACA;QAEJ,OAAO;YACL,IAAIE,OAAO;gBAACV;gBAAGC;gBAAGC;gBAAGC;gBAAGC;gBAAGC;aAAE;YAC7B,IAAIM,WAAW;YACfF,QAAQ,IAAID,MACVT,OAAO,OAAO,CAAC,OAAO;gBAAa,OAAOW,IAAI,CAACC,WAAW;YAAE;YAE9DF,MAAM,IAAI,GAAG;QACf;QAEAA,MAAM,WAAW,GAAG,GAAG,4CAA4C;QACnE,MAAMA;IACR;AACF;AAEAG,cAAc,GAAGf;;;;;;;;2CC9CjBgB;;;eAAAA;;;;;8GAFc;IAEdA,WAAeC,mCAA0B;;;;;;;;2CCkBzCD;;;eAAAA;;;;yFAnBqC;IAmBrCA,WAAgBE,qBAAoB,YAAY,CAAO;;;;;;ACpBvD;;;;;;;;CAQC,GAEY;;;;2CAgDbF;;;eAAAA;;;;AA5CA,IAAMG,WAAWC,mBAAOA,CAAC,KAAuB;AAChD,IAAMC,iBAAiBD,mBAAOA,CAAC,KAAkB;AAIjD,wBAAwB,GACxB,SAASE,aAAaC,KAAK;IACzB,IAAIA,UAAUb,aAAaa,UAAU,MAAM;QACzC,OAAOA;IACT;IAEA,IAAIC,kBAAkBH,eAAeE;IACrC,IAAIC,oBAAoB,QAAQA,oBAAoBd,WAAW;QAC7D,OAAOA;IACT;IAEA,IAAIe,CAAAA,OAAOD,gDAAPC,UAAsB,CAAfD,gBAAc,MAAM,UAAU;QACvC,IAAME,qBACJN,uEAAuD;QAEzD,IAAMO,oBAAoBD,mBAAmBF;QAE7C,IAAIG,qBAAqB,MAAM;YAC7B,OAAOA;QACT;IACF;IAEA,IAAI,OAAOH,oBAAoB,UAAU;QACvC,OAAO;IACT;IAEA,sCAAsC;IACtCA,kBAAmB,CAACA,mBAAmB,KAAOA,oBAAoB,CAAC,MAAO;IAE1E,IAAIL,SAAS,EAAE,KAAK,WAAW;QAC7B,6DAA6D;QAC7D,qEAAqE;QACrE,mEAAmE;QACnE,6CAA6C;QAC7CK,kBAAkBA,kBAAkB;IACtC;IACA,OAAOA;AACT;IAEAR,WAAeM;;;;;AC1Df;;;;;;;;CAQC,GAED,wBAAwB;;;;;oFAKI;AAE5B,SAASD,eACPE,KAAK;IAEL,IAAIE,CAAAA,OAAOF,sCAAPE,UAAY,CAALF,MAAI,MAAM,YAAYA,SAAS,MAAM;QAC9C,IAAOK,uBAAwBR,2EAAJQ;QAC3B,IAAMJ,kBAAkBI,qBAAqBL;QAC7C,IAAIC,mBAAmB,MAAM;YAC3B,OAAOA;QACT;IACF;IAEA,IAAI,OAAOD,UAAU,YAAY,OAAOA,UAAU,UAAU;QAC1D,OAAOM,IAAAA,wBAAe,EAACN;IACzB;AACF;AAEAR,cAAc,GAAGM;;;;;ACjCjB;;;;;;;;CAQC,GAKD,mEAAmE;;;;;;;;;;QAuBtDS;eAAAA;;QAZAC;eAAAA;;QAuDAH;eAAAA;;QA6BAF;eAAAA;;;AApFN,IAAMK,gBAAgB;qCAAIC;QAAAA;;IAC/B,sGAAsG;IACtG,OAAQ;QAAC,UAAUA;IAAK;AAC1B;AASO,IAAMF,yBAAyB,SACpCG;IAEA,OAAQ;QACN,SAAS;YACP,OAAOA,MAAM,KAAK;YAClB,MAAMA,MAAM,IAAI;YAChB,mBAAmBA,MAAM,iBAAiB;YAC1C,kBAAkBA,MAAM,gBAAgB;QAC1C;IAGF;AACF;AAEA,IAAMC,wBAAwB,SAC5BX;IAEA,IAAI,cAAcA,OAAO;QACvB,wBAAwB;QACxB,OAAOA;IACT,OAAO,IAAI,aAAaA,SAASA,MAAM,OAAO,KAAKb,WAAW;QAC5D,IAAMW,iBAAiBD,mBAAOA,CAAC,KAAkB;QAEjD,oCAAoC;QACpC,IAAMe,UAAUZ,MAAM,OAAO;QAC7B,IAAMa,eAAsC;YAC1C,SAAS;gBACP,+BAA+B;gBAC/B,OAAOf,eAAec,QAAQ,KAAK;gBACnC,+BAA+B;gBAC/B,MAAMd,eAAec,QAAQ,IAAI;gBACjC,+BAA+B;gBAC/B,mBAAmBd,eAAec,QAAQ,iBAAiB;gBAC3D,+BAA+B;gBAC/B,kBAAkBd,eAAec,QAAQ,gBAAgB;YAC3D;QACF;QACA,OAAOC;IACT;IACA,OAAO;AACT;AAEO,IAAMR,uBAIeM;AAE5B,IAAMG,sBAAsB,SAC1Bd;IAEA,IAAI,aAAaA,SAASA,MAAM,OAAO,IAAI,MAAM;QAC/C,IAAMD,eAAeF,wDAAiC;QACtD,IAAMe,UAAUZ,MAAM,OAAO;QAC7B,IAAMa,eAAsC;YAC1C,SAAS;gBACP,+BAA+B;gBAC/B,OAAOd,aAAaa,QAAQ,KAAK;gBACjC,+BAA+B;gBAC/B,MAAMb,aAAaa,QAAQ,IAAI;gBAC/B,+BAA+B;gBAC/B,mBAAmBb,aAAaa,QAAQ,iBAAiB;gBACzD,+BAA+B;gBAC/B,kBAAkBb,aAAaa,QAAQ,gBAAgB;YACzD;QACF;QACA,OAAOC;IACT;IACA,OAAOb;AACT;AAEO,IAAMG,qBAIYW;;;;;AChHzB;;;;;;;;CAQC;;;;+FAOsC;AAEvC,IAAMlB,WAAyB;IAC7B,aAAa;IACb,IAAI;IACJ,qCAAqC;IACrC,IAAI,WAAkB;QACpB,oCAAoC;QACpC,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS;IACjC;IACA,qCAAqC;IACrC,IAAI,aAcD;QACD,oCAAoC;QACpC,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM;YAC5B,oCAAoC;YACpC,IAAI,CAAC,WAAW,GAAGF,mCAA0B,CAAC,YAAY;QAC5D;QACA,oCAAoC;QACpC,OAAO,IAAI,CAAC,WAAW;IACzB;IACA,qCAAqC;IACrC,IAAI,SAAiB;QACnB,oCAAoC;QACpC,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,KAAK;IAC3C;IACA,qCAAqC;IACrC,IAAI,QAAgB;QAClB,oCAAoC;QACpC,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,KAAK;IAC3C;IACA,qCAAqC;IACrC,IAAI,YAAoB;QACtB,oCAAoC;QACpC,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,KAAK;IAC3C;IACA,qCAAqC;IACrC,IAAI,aAAqB;QACvB,IAAIqB,KAAOA,EAAE,EAGZ;QACD,OAAO;IACT;IACA,qCAAqC;IACrC,IAAI,uBAA+B;YAE1BC;QADP,oCAAoC;QACpC,OAAOA,CAAAA,sCAAAA,IAAI,CAAC,SAAS,CAAC,mBAAmB,YAAlCA,sCAAsC,IAAI,CAAC,SAAS;IAC7D;IACA,qCAAqC;IACrC,IAAI,iBAAyB;YAEpBC;QADP,oCAAoC;QACpC,OAAOA,CAAAA,gCAAAA,IAAI,CAAC,SAAS,CAAC,aAAa,YAA5BA,gCAAgC;IACzC;IACA,QAAW,SAACC;eACV,kCAAkC;QAClC,SAASA,OAAOA,KAAK,GAAG,GAAG,YAAYA,OAAOA,IAAK,UAAM,GAAGA,IAAK,WAAO;;AAC5E;AAEA1B,cAAc,GAAGI"}