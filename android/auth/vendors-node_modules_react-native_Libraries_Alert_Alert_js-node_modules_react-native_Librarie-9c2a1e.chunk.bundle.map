{"version":3,"file":"vendors-node_modules_react-native_Libraries_Alert_Alert_js-node_modules_react-native_Librarie-9c2a1e.chunk.bundle","sources":["webpack:///./node_modules/react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter.js","webpack:///./node_modules/react-native/Libraries/ReactNative/NativeHeadlessJsTaskSupport.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeRedBox.js","webpack:///./node_modules/react-native/Libraries/Utilities/GlobalPerformanceLogger.js","webpack:///./node_modules/react-native/Libraries/Components/View/ViewPropTypes.js","webpack:///./node_modules/react-native/Libraries/ReactNative/AppContainer.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeNetworkingAndroid.js","webpack:///./node_modules/react-native/Libraries/Utilities/RCTLog.js","webpack:///./node_modules/react-native/src/private/styles/composeStyles.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeHeadlessJsTaskSupport.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeRedBox.js","webpack:///./node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js","webpack:///./node_modules/react-native/Libraries/Network/RCTNetworking.android.js","webpack:///./node_modules/react-native/Libraries/Core/registerCallableModule.js","webpack:///./node_modules/react-native/Libraries/Utilities/BackHandler.android.js","webpack:///./node_modules/@swc/helpers/cjs/_object_without_properties_loose.cjs","webpack:///./node_modules/react-native/src/private/specs/modules/NativeDeviceEventManager.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeDeviceEventManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/getCachedComponentWithDebugName.js","webpack:///./node_modules/react-native/Libraries/Blob/NativeBlobModule.js","webpack:///./node_modules/react-native/Libraries/Alert/Alert.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeBugReporting.js","webpack:///./node_modules/react-native/Libraries/Utilities/infoLog.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeDialogManagerAndroid.js","webpack:///./node_modules/react-native/Libraries/BugReporting/NativeBugReporting.js","webpack:///./node_modules/react-native/Libraries/Utilities/PerformanceLoggerContext.js","webpack:///./node_modules/react-native/Libraries/ReactNative/DisplayMode.js","webpack:///./node_modules/react-native/Libraries/Network/FormData.js","webpack:///./node_modules/react-native/Libraries/Utilities/SceneTracker.js","webpack:///./node_modules/react-native/Libraries/ReactNative/HeadlessJsTaskError.js","webpack:///./node_modules/react-native/Libraries/Network/NativeNetworkingAndroid.js","webpack:///./node_modules/react-native/Libraries/Utilities/binaryToBase64.js","webpack:///./node_modules/react-native/Libraries/ReactNative/renderApplication.js","webpack:///./node_modules/react-native/Libraries/ReactNative/AppContainer-prod.js","webpack:///./node_modules/react-native/Libraries/Blob/BlobRegistry.js","webpack:///./node_modules/react-native/Libraries/BugReporting/BugReporting.js","webpack:///./node_modules/react-native/Libraries/BugReporting/dumpReactTree.js","webpack:///./node_modules/react-native/Libraries/Components/View/View.js","webpack:///./node_modules/react-native/Libraries/Utilities/createPerformanceLogger.js","webpack:///./node_modules/react-native/Libraries/Text/TextAncestor.js","webpack:///./node_modules/react-native/Libraries/Alert/RCTAlertManager.android.js","webpack:///./node_modules/react-native/Libraries/Blob/Blob.js","webpack:///./node_modules/react-native/Libraries/Blob/BlobManager.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/StyleSheet.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeBlobModule.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeDialogManagerAndroid.js","webpack:///./node_modules/react-native/Libraries/Components/View/ViewNativeComponent.js","webpack:///./node_modules/react-native/Libraries/ReactNative/AppRegistry.js","webpack:///./node_modules/react-native/Libraries/Network/convertRequestBody.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\n\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTNativeAppEventEmitter.\n */\nconst RCTNativeAppEventEmitter = RCTDeviceEventEmitter;\nmodule.exports = RCTNativeAppEventEmitter;\n","export * from '../../src/private/specs/modules/NativeHeadlessJsTaskSupport';\nimport NativeHeadlessJsTaskSupport from '../../src/private/specs/modules/NativeHeadlessJsTaskSupport';\nexport default NativeHeadlessJsTaskSupport;","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                                                    \n                       \n \nexport default (TurboModuleRegistry.get      ('RedBox')       );","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n                                                                  \n\nimport createPerformanceLogger from './createPerformanceLogger';\n\n/**\n * This is a global shared instance of IPerformanceLogger that is created with\n * createPerformanceLogger().\n * This logger should be used only for global performance metrics like the ones\n * that are logged during loading bundle. If you want to log something from your\n * React component you should use PerformanceLoggerContext instead.\n */\nconst GlobalPerformanceLogger                     = createPerformanceLogger();\n\nmodule.exports = GlobalPerformanceLogger;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n'use strict';\n\n                                                                              \n                                                               \n             \n            \n             \n         \n              \n             \n               \n             \n                                    \n             \n                           \n                          \n                    \n                     \n                     \n       \n                             \n                                \n\n                                \n                                          \n\n                                    \n     \n                                                                           \n                                                           \n    \n     \n                                                                      \n\n     \n                                                                           \n                                                      \n    \n                                                             \n     \n                                    \n\n     \n                                              \n    \n                                                      \n    \n                                                                             \n                                                                          \n                                                                        \n    \n                                                   \n     \n                                            \n\n     \n                                                                               \n                                         \n    \n                                                     \n     \n                            \n\n     \n                                                                               \n                                      \n    \n                                                                \n     \n                                       \n    \n\n                                   \n                                              \n                                              \n    \n\n// Experimental/Work in Progress Pointer Event Callbacks (not yet ready for use)\n                                     \n                                           \n                                                  \n                                                  \n                                                         \n                                                  \n                                                         \n                                                 \n                                                        \n                                               \n                                                      \n                                             \n                                                    \n                                           \n                                                  \n                                             \n                                                    \n                                            \n                                                   \n                                                   \n                                                          \n                                                    \n                                                           \n    \n\n                                   \n                                       \n                                              \n                                         \n                                                \n    \n\n                                   \n                                           \n                                                  \n                                        \n                                               \n                                         \n                                                \n                                          \n                                                 \n    \n\n/**\n * For most touch interactions, you'll simply want to wrap your component in\n * `TouchableHighlight` or `TouchableOpacity`. Check out `Touchable.js`,\n * `ScrollResponder.js` and `ResponderEventPlugin.js` for more discussion.\n */\n                                              \n     \n                                                                            \n                                                                 \n    \n                                                                            \n                                                           \n    \n                                                                   \n     \n                                                         \n\n     \n                                                                               \n                                                                 \n    \n                                                                             \n                                                                 \n    \n                                                                          \n     \n                                                                \n\n     \n                                                                               \n                                         \n    \n                                                                               \n                                    \n    \n                                                                               \n                                                                       \n    \n                                                           \n     \n                                                        \n\n     \n                                     \n    \n                                                                              \n                                    \n    \n                                                          \n     \n                                             \n\n     \n                                                                               \n                                \n    \n                                                                      \n                                              \n    \n                                                            \n     \n                                               \n\n     \n                                   \n    \n                                                                       \n                                              \n    \n                                                             \n     \n                                                \n\n                                              \n                                            \n\n     \n                                                                          \n                                                                             \n                                                                              \n                   \n    \n                                                                         \n                                              \n    \n                                                               \n     \n                                                  \n\n     \n                                                                             \n                                                                \n    \n                                                                             \n                                                   \n    \n                                                                        \n     \n                                                              \n\n     \n                                                                     \n    \n                                                                             \n                                                           \n    \n                                                                    \n     \n                                                          \n\n     \n                                                                               \n                                                                        \n    \n                                                                              \n                                                                 \n    \n                                                                           \n     \n                                                                 \n    \n\n                                            \n                           \n                    \n    \n\n                                         \n                        \n                  \n                        \n                         \n    \n\n                                                                        \n\n                                    \n     \n                                                                                                                                             \n                                                                                               \n    \n                      \n     \n                                                     \n\n     \n                                                                                                                                             \n                                                                                               \n    \n                      \n     \n                              \n\n     \n                                                                            \n                                                              \n    \n                      \n    \n                                                                  \n     \n                                                               \n\n     \n                                                                            \n                                                              \n    \n                      \n    \n                                                                  \n     \n                                                  \n\n                                             \n                                             \n\n     \n                                                                              \n                                        \n    \n                      \n    \n                                                                         \n     \n                                            \n\n     \n                                                                    \n                                                                               \n                                                   \n    \n                      \n    \n                                                                    \n     \n                                                                               \n\n     \n                                                                             \n    \n                      \n     \n                                 \n\n     \n                                                                   \n    \n                      \n     \n                          \n\n     \n                                                                      \n    \n                      \n     \n                             \n\n     \n                                                                   \n    \n                      \n     \n                          \n\n     \n                                                                    \n    \n                      \n     \n                           \n\n     \n                                                                 \n    \n                      \n     \n                        \n\n     \n                                                                                                                       \n    \n                      \n     \n                      \n\n     \n                                                                                                                                 \n                                                                                     \n                      \n    \n                                   \n                             \n                                 \n    \n                      \n     \n                    \n\n     \n                                                                                                                     \n    \n                      \n     \n                                          \n    \n\n                                \n     \n                                                                                       \n    \n                  \n     \n                                              \n\n     \n                                                                    \n                                                    \n                        \n    \n                  \n    \n                                                                   \n     \n                                      \n\n     \n                  \n    \n                                                                               \n     \n                                                  \n\n     \n                  \n    \n                                                                         \n     \n                                           \n\n     \n                                                                                               \n                                      \n                        \n    \n                   \n     \n                          \n\n     \n                                                                           \n                                           \n    \n                  \n    \n                                                                      \n     \n                                         \n\n     \n                                                                        \n                                                                           \n                                                                      \n    \n                  \n     \n                                     \n\n     \n                                                                           \n    \n                  \n    \n                                                             \n     \n                                \n    \n\n                                    \n                      \n                                \n                     \n                       \n                     \n                     \n                      \n                  \n\n                  \n                         \n\n     \n                                                                      \n                                                           \n    \n                                                     \n     \n                        \n\n     \n                                                                                \n                                                                             \n                                                                           \n    \n                                                             \n     \n                                  \n\n     \n                                                                                    \n                                                                                    \n                         \n    \n    \n                                                            \n     \n                                 \n\n     \n                                                                                       \n                                                          \n     \n                            \n\n     \n                                                                                    \n     \n                                         \n\n     \n                                \n     \n               \n\n     \n                                                                                  \n     \n                                           \n                                           \n\n     \n                                 \n                                                                                                                                \n     \n                                               \n                                               \n                                               \n                                                 \n\n     \n                                                                     \n    \n     \n                                                                  \n\n     \n                                 \n    \n                                                                      \n     \n                         \n                                      \n                             \n                             \n                             \n                                                                            \n                                           \n    \n                                                      \n     \n                           \n\n     \n                                                                              \n                                                                          \n                                                                                \n                                                                 \n    \n                      \n                                                 \n    \n                                                      \n     \n                         \n\n     \n                                                                             \n                                                                     \n                                         \n     \n                                 \n\n     \n                                                                              \n                                                                         \n                                                                        \n    \n                                            \n     \n                                                           \n\n     \n                                                                                       \n    \n                                                                               \n    \n                                             \n     \n              \n\n     \n                                                  \n    \n                                                                               \n    \n                                                 \n     \n                   \n\n     \n                                                  \n    \n                                                                               \n    \n                                                   \n     \n                     \n\n     \n                                                                           \n                                                                          \n    \n                                                                         \n     \n                                            \n\n     \n                                                                     \n                                                                           \n                                               \n    \n                                                                               \n                                                                               \n             \n    \n                                                  \n     \n                                  \n\n     \n                                                                   \n    \n                                                        \n     \n                                                               \n\n     \n                                                                              \n                                                                          \n                                                                          \n                                                                        \n                                                                              \n                                \n    \n                                                                \n     \n                                   \n    \n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n                                                            \n                                       \n\nimport * as React from 'react';\n\n                                \n                        \n                   \n                            \n                       \n                                               \n                                 \n                                   \n                                      \n    \n\nconst AppContainer                                 = __DEV__\n  ? require('./AppContainer-dev').default\n  : require('./AppContainer-prod').default;\n\nmodule.exports = AppContainer;\n","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                               \n                                           \n                                                                                                                                                                                                                \n                                             \n                                                               \n                                            \n                                            \n \nexport default (TurboModuleRegistry.getEnforcing      ('Networking')      );","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nconst levelsMap = {\n  log: 'log',\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  fatal: 'error',\n};\n\nlet warningHandler                             = null;\n\nconst RCTLog = {\n  // level one of log, info, warn, error, mustfix\n  logIfNoNativeHook(level        , ...args              )       {\n    // We already printed in the native console, so only log here if using a js debugger\n    if (typeof global.nativeLoggingHook === 'undefined') {\n      RCTLog.logToConsole(level, ...args);\n    } else {\n      // Report native warnings to LogBox\n      if (warningHandler && level === 'warn') {\n        warningHandler(...args);\n      }\n    }\n  },\n\n  // Log to console regardless of nativeLoggingHook\n  logToConsole(level        , ...args              )       {\n    // $FlowFixMe[invalid-computed-prop]\n    const logFn = levelsMap[level];\n    invariant(\n      logFn,\n      'Level \"' + level + '\" not one of ' + Object.keys(levelsMap).toString(),\n    );\n\n    console[logFn](...args);\n  },\n\n  setWarningHandler(handler                       )       {\n    warningHandler = handler;\n  },\n};\n\nmodule.exports = RCTLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n/**\n * Combines two styles such that `style2` will override any styles in `style1`.\n * If either style is null or undefined, the other one is returned without\n * allocating an array, saving allocations and enabling memoization.\n */\nexport default function composeStyles        (\n  style1     ,\n  style2     ,\n)                                       {\n  if (style1 == null) {\n    return style2;\n  }\n  if (style2 == null) {\n    return style1;\n  }\n  return [style1, style2];\n}\n","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                                \n                                                         \n \nexport default (TurboModuleRegistry.get      ('HeadlessJsTaskSupport')       );","export * from '../../../src/private/specs/modules/NativeRedBox';\nimport NativeRedBox from '../../../src/private/specs/modules/NativeRedBox';\nexport default NativeRedBox;","'use strict';\n\n                                                                                       \nimport Platform from '../Utilities/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'invariant';\n                        \n                                       \n                                       \n \n                                  \nexport default class NativeEventEmitter                                                                   {\n  _nativeModule               ;\n  constructor(nativeModule               ) {\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n    }\n    const hasAddListener = !!nativeModule && typeof nativeModule.addListener === 'function';\n    const hasRemoveListeners = !!nativeModule && typeof nativeModule.removeListeners === 'function';\n    if (nativeModule && hasAddListener && hasRemoveListeners) {\n      this._nativeModule = nativeModule;\n    } else if (nativeModule != null) {\n      if (!hasAddListener) {\n        console.warn('`new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.');\n      }\n      if (!hasRemoveListeners) {\n        console.warn('`new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.');\n      }\n    }\n  }\n  addListener                                (eventType        , listener                                                           , context        )                    {\n    this._nativeModule?.addListener(eventType);\n    let subscription                     = RCTDeviceEventEmitter.addListener(eventType, listener, context);\n    return {\n      remove: () => {\n        if (subscription != null) {\n          this._nativeModule?.removeListeners(1);\n          subscription.remove();\n          subscription = null;\n        }\n      }\n    };\n  }\n  emit                                (eventType        , ...args                                       )       {\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n  removeAllListeners                                (eventType          )       {\n    invariant(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n    this._nativeModule?.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n  listenerCount                                (eventType        )         {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n                                                      \n                                                         \n\n// Do not require the native RCTNetworking module directly! Use this wrapper module instead.\n// It will add the necessary requestId, so that you don't have to generate it yourself.\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport convertRequestBody from './convertRequestBody';\nimport NativeNetworkingAndroid from './NativeNetworkingAndroid';\n\n                               \n\n// Convert FormData headers to arrays, which are easier to consume in\n// native on Android.\nfunction convertHeadersMapToArray(headers        )                {\n  const headerArray                = [];\n  for (const name in headers) {\n    headerArray.push([name, headers[name]]);\n  }\n  return headerArray;\n}\n\nlet _requestId = 1;\nfunction generateRequestId()         {\n  return _requestId++;\n}\n\n/**\n * This class is a wrapper around the native RCTNetworking module. It adds a necessary unique\n * requestId to each network request that can be used to abort that request later on.\n */\n// FIXME: use typed events\nclass RCTNetworking extends NativeEventEmitter             {\n  constructor() {\n    super(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeNetworkingAndroid,\n    );\n  }\n\n  sendRequest(\n    method        ,\n    trackingName        ,\n    url        ,\n    headers        ,\n    data             ,\n    responseType                    ,\n    incrementalUpdates         ,\n    timeout        ,\n    callback                              ,\n    withCredentials         ,\n  ) {\n    const body = convertRequestBody(data);\n    if (body && body.formData) {\n      body.formData = body.formData.map(part => ({\n        ...part,\n        headers: convertHeadersMapToArray(part.headers),\n      }));\n    }\n    const requestId = generateRequestId();\n    NativeNetworkingAndroid.sendRequest(\n      method,\n      url,\n      requestId,\n      convertHeadersMapToArray(headers),\n      {...body, trackingName},\n      responseType,\n      incrementalUpdates,\n      timeout,\n      withCredentials,\n    );\n    callback(requestId);\n  }\n\n  abortRequest(requestId        ) {\n    NativeNetworkingAndroid.abortRequest(requestId);\n  }\n\n  clearCookies(callback                          ) {\n    NativeNetworkingAndroid.clearCookies(callback);\n  }\n}\n\nexport default (new RCTNetworking()               );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                    \n                               \n               \n                                             \n          \n\nconst registerCallableModule                         = (function () {\n  if (global.RN$Bridgeless === true) {\n    return (name, moduleOrFactory) => {\n      if (typeof moduleOrFactory === 'function') {\n        global.RN$registerCallableModule(name, moduleOrFactory);\n        return;\n      }\n\n      global.RN$registerCallableModule(name, () => moduleOrFactory);\n    };\n  }\n\n  const BatchedBridge = require('../BatchedBridge/BatchedBridge');\n  return (name, moduleOrFactory) => {\n    if (typeof moduleOrFactory === 'function') {\n      BatchedBridge.registerLazyCallableModule(name, moduleOrFactory);\n      return;\n    }\n\n    BatchedBridge.registerCallableModule(name, moduleOrFactory);\n  };\n})();\n\nexport default registerCallableModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\nimport NativeDeviceEventManager from '../../Libraries/NativeModules/specs/NativeDeviceEventManager';\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\n\nconst DEVICE_BACK_EVENT = 'hardwareBackPress';\n\n                                                            \n\nconst _backPressSubscriptions = [];\n\nRCTDeviceEventEmitter.addListener(DEVICE_BACK_EVENT, function () {\n  for (let i = _backPressSubscriptions.length - 1; i >= 0; i--) {\n    if (_backPressSubscriptions[i]()) {\n      return;\n    }\n  }\n\n  BackHandler.exitApp();\n});\n\n/**\n * Detect hardware button presses for back navigation.\n *\n * Android: Detect hardware back button presses, and programmatically invoke the default back button\n * functionality to exit the app if there are no listeners or if none of the listeners return true.\n *\n * iOS: Not applicable.\n *\n * The event subscriptions are called in reverse order (i.e. last registered subscription first),\n * and if one subscription returns true then subscriptions registered earlier will not be called.\n *\n * Example:\n *\n * ```javascript\n * BackHandler.addEventListener('hardwareBackPress', function() {\n *  // this.onMainScreen and this.goBack are just examples, you need to use your own implementation here\n *  // Typically you would use the navigator here to go to the last state.\n *\n *  if (!this.onMainScreen()) {\n *    this.goBack();\n *    return true;\n *  }\n *  return false;\n * });\n * ```\n */\n                      \n                       \n                      \n                                  \n                            \n                                 \n                         \n                                  \n                            \n            \n   \nconst BackHandler               = {\n  exitApp: function ()       {\n    if (!NativeDeviceEventManager) {\n      return;\n    }\n\n    NativeDeviceEventManager.invokeDefaultBackPressHandler();\n  },\n\n  /**\n   * Adds an event handler. Supported events:\n   *\n   * - `hardwareBackPress`: Fires when the Android hardware back button is pressed.\n   */\n  addEventListener: function (\n    eventName                    ,\n    handler                ,\n  )                            {\n    if (_backPressSubscriptions.indexOf(handler) === -1) {\n      _backPressSubscriptions.push(handler);\n    }\n    return {\n      remove: ()       => BackHandler.removeEventListener(eventName, handler),\n    };\n  },\n\n  /**\n   * Removes the event handler.\n   */\n  removeEventListener: function (\n    eventName                    ,\n    handler                ,\n  )       {\n    const index = _backPressSubscriptions.indexOf(handler);\n    if (index !== -1) {\n      _backPressSubscriptions.splice(index, 1);\n    }\n  },\n};\n\nmodule.exports = BackHandler;\n","\"use strict\";\n\nfunction _object_without_properties_loose(source, excluded) {\n    if (source == null) return {};\n\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n\n    return target;\n}\nexports._ = _object_without_properties_loose;\n","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                            \n \nexport default (TurboModuleRegistry.get      ('DeviceEventManager')       );","export * from '../../../src/private/specs/modules/NativeDeviceEventManager';\nimport NativeDeviceEventManager from '../../../src/private/specs/modules/NativeDeviceEventManager';\nexport default NativeDeviceEventManager;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n                                             \n\nimport * as React from 'react';\n\n                                                               \n\nconst cache      \n                        \n                                            \n  = new Map();\n\nexport default function getCachedComponentWithDisplayName(\n  displayName        ,\n)                {\n  let ComponentWithDisplayName = cache.get(displayName);\n\n  if (!ComponentWithDisplayName) {\n    ComponentWithDisplayName = ({children}                        ) => children;\n    // $FlowFixMe[prop-missing]\n    ComponentWithDisplayName.displayName = displayName;\n    cache.set(displayName, ComponentWithDisplayName);\n  }\n\n  return ComponentWithDisplayName;\n}\n","export * from '../../src/private/specs/modules/NativeBlobModule';\nimport NativeBlobModule from '../../src/private/specs/modules/NativeBlobModule';\nexport default NativeBlobModule;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n                                                                                     \n\nimport Platform from '../Utilities/Platform';\nimport RCTAlertManager from './RCTAlertManager';\n\n                       \n             \n                \n                 \n                     \n                                                                    \n                             \n                \n                      \n                        \n                           \n     \n   \n\n                \n                        \n                                                        \n                          \n     \n  \n\n/**\n * Launches an alert dialog with the specified title and message.\n *\n * See https://reactnative.dev/docs/alert\n */\nclass Alert {\n  static alert(\n    title         ,\n    message          ,\n    buttons          ,\n    options          ,\n  )       {\n    if (Platform.OS === 'ios') {\n      Alert.prompt(\n        title,\n        message,\n        buttons,\n        'default',\n        undefined,\n        undefined,\n        options,\n      );\n    } else if (Platform.OS === 'android') {\n      const NativeDialogManagerAndroid =\n        require('../NativeModules/specs/NativeDialogManagerAndroid').default;\n      if (!NativeDialogManagerAndroid) {\n        return;\n      }\n      const constants = NativeDialogManagerAndroid.getConstants();\n\n      const config                = {\n        title: title || '',\n        message: message || '',\n        cancelable: false,\n      };\n\n      if (options && options.cancelable) {\n        config.cancelable = options.cancelable;\n      }\n      // At most three buttons (neutral, negative, positive). Ignore rest.\n      // The text 'OK' should be probably localized. iOS Alert does that in native.\n      const defaultPositiveText = 'OK';\n      const validButtons          = buttons\n        ? buttons.slice(0, 3)\n        : [{text: defaultPositiveText}];\n      const buttonPositive = validButtons.pop();\n      const buttonNegative = validButtons.pop();\n      const buttonNeutral = validButtons.pop();\n\n      if (buttonNeutral) {\n        config.buttonNeutral = buttonNeutral.text || '';\n      }\n      if (buttonNegative) {\n        config.buttonNegative = buttonNegative.text || '';\n      }\n      if (buttonPositive) {\n        config.buttonPositive = buttonPositive.text || defaultPositiveText;\n      }\n\n      /* $FlowFixMe[missing-local-annot] The type annotation(s) required by\n       * Flow's LTI update could not be added via codemod */\n      const onAction = (action, buttonKey) => {\n        if (action === constants.buttonClicked) {\n          if (buttonKey === constants.buttonNeutral) {\n            // $FlowFixMe[incompatible-type]\n            buttonNeutral.onPress && buttonNeutral.onPress();\n          } else if (buttonKey === constants.buttonNegative) {\n            // $FlowFixMe[incompatible-type]\n            buttonNegative.onPress && buttonNegative.onPress();\n          } else if (buttonKey === constants.buttonPositive) {\n            // $FlowFixMe[incompatible-type]\n            buttonPositive.onPress && buttonPositive.onPress();\n          }\n        } else if (action === constants.dismissed) {\n          options && options.onDismiss && options.onDismiss();\n        }\n      };\n      const onError = (errorMessage        ) => console.warn(errorMessage);\n      NativeDialogManagerAndroid.showAlert(config, onError, onAction);\n    }\n  }\n\n  static prompt(\n    title         ,\n    message          ,\n    callbackOrButtons                                        ,\n    type              = 'plain-text',\n    defaultValue         ,\n    keyboardType         ,\n    options          ,\n  )       {\n    if (Platform.OS === 'ios') {\n      let callbacks              = [];\n      const buttons = [];\n      let cancelButtonKey;\n      let destructiveButtonKey;\n      let preferredButtonKey;\n      if (typeof callbackOrButtons === 'function') {\n        callbacks = [callbackOrButtons];\n      } else if (Array.isArray(callbackOrButtons)) {\n        callbackOrButtons.forEach((btn, index) => {\n          callbacks[index] = btn.onPress;\n          if (btn.style === 'cancel') {\n            cancelButtonKey = String(index);\n          } else if (btn.style === 'destructive') {\n            destructiveButtonKey = String(index);\n          }\n          if (btn.isPreferred) {\n            preferredButtonKey = String(index);\n          }\n          if (btn.text || index < (callbackOrButtons || []).length - 1) {\n            const btnDef                     = {};\n            btnDef[index] = btn.text || '';\n            buttons.push(btnDef);\n          }\n        });\n      }\n\n      RCTAlertManager.alertWithArgs(\n        {\n          title: title || '',\n          message: message || undefined,\n          buttons,\n          type: type || undefined,\n          defaultValue,\n          cancelButtonKey,\n          destructiveButtonKey,\n          preferredButtonKey,\n          keyboardType,\n          userInterfaceStyle: options?.userInterfaceStyle || undefined,\n        },\n        (id, value) => {\n          const cb = callbacks[id];\n          cb && cb(value);\n        },\n      );\n    }\n  }\n}\n\nmodule.exports = Alert;\n","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                       \n                                                                 \n \nexport default (TurboModuleRegistry.get      ('BugReporting')       );","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args              )       {\n  return console.log(...args);\n}\n\nmodule.exports = infoLog;\n","export * from '../../../src/private/specs/modules/NativeDialogManagerAndroid';\nimport NativeDialogManagerAndroid from '../../../src/private/specs/modules/NativeDialogManagerAndroid';\nexport default NativeDialogManagerAndroid;","export * from '../../src/private/specs/modules/NativeBugReporting';\nimport NativeBugReporting from '../../src/private/specs/modules/NativeBugReporting';\nexport default NativeBugReporting;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n                                                                  \n\nimport GlobalPerformanceLogger from './GlobalPerformanceLogger';\nimport * as React from 'react';\nimport {useContext} from 'react';\n\n/**\n * This is a React Context that provides a scoped instance of IPerformanceLogger.\n * We wrap every <AppContainer /> with a Provider for this context so the logger\n * should be available in every component.\n * See React docs about using Context: https://react.dev/docs/context.html\n */\nconst PerformanceLoggerContext                                    =\n  React.createContext(GlobalPerformanceLogger);\nif (__DEV__) {\n  PerformanceLoggerContext.displayName = 'PerformanceLoggerContext';\n}\n\nexport function usePerformanceLogger()                     {\n  return useContext(PerformanceLoggerContext);\n}\n\nexport default PerformanceLoggerContext;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                            \n\n/** DisplayMode should be in sync with the method displayModeToInt from\n * react/renderer/uimanager/primitives.h. */\nconst DisplayMode                              = Object.freeze({\n  VISIBLE: 1,\n  SUSPENDED: 2,\n  HIDDEN: 3,\n});\n\nexport function coerceDisplayMode(value         )                  {\n  switch (value) {\n    case DisplayMode.SUSPENDED:\n      return DisplayMode.SUSPENDED;\n    case DisplayMode.HIDDEN:\n      return DisplayMode.HIDDEN;\n    default:\n      return DisplayMode.VISIBLE;\n  }\n}\n\nexport default DisplayMode;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\n                                                                          \n                                                     \n\n                                             \n                   \n     \n                     \n                       \n         \n     \n     \n                  \n                       \n                    \n                    \n         \n      \n\n/**\n * Polyfill for XMLHttpRequest2 FormData API, allowing multipart POST requests\n * with mixed data (string, native files) to be submitted via XMLHttpRequest.\n *\n * Example:\n *\n *   var photo = {\n *     uri: uriFromCameraRoll,\n *     type: 'image/jpeg',\n *     name: 'photo.jpg',\n *   };\n *\n *   var body = new FormData();\n *   body.append('authToken', 'secret');\n *   body.append('photo', photo);\n *   body.append('title', 'A beautiful photo!');\n *\n *   xhr.open('POST', serverURL);\n *   xhr.send(body);\n */\nclass FormData {\n  _parts                              ;\n\n  constructor() {\n    this._parts = [];\n  }\n\n  append(key        , value               ) {\n    // The XMLHttpRequest spec doesn't specify if duplicate keys are allowed.\n    // MDN says that any new values should be appended to existing values.\n    // In any case, major browsers allow duplicate keys, so that's what we'll do\n    // too. They'll simply get appended as additional form data parts in the\n    // request body, leaving the server to deal with them.\n    this._parts.push([key, value]);\n  }\n\n  getAll(key        )                       {\n    return this._parts\n      .filter(([name]) => name === key)\n      .map(([, value]) => value);\n  }\n\n  getParts()                      {\n    return this._parts.map(([name, value]) => {\n      const contentDisposition = 'form-data; name=\"' + name + '\"';\n\n      const headers          = {'content-disposition': contentDisposition};\n\n      // The body part is a \"blob\", which in React Native just means\n      // an object with a `uri` attribute. Optionally, it can also\n      // have a `name` and `type` attribute to specify filename and\n      // content type (cf. web Blob interface.)\n      if (typeof value === 'object' && !Array.isArray(value) && value) {\n        if (typeof value.name === 'string') {\n          headers['content-disposition'] += `; filename=\"${\n            value.name\n          }\"; filename*=utf-8''${encodeURI(value.name)}`;\n        }\n        if (typeof value.type === 'string') {\n          headers['content-type'] = value.type;\n        }\n        return {...value, headers, fieldName: name};\n      }\n      // Convert non-object values to strings as per FormData.append() spec\n      return {string: String(value), headers, fieldName: name};\n    });\n  }\n}\n\nmodule.exports = FormData;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\n                                                         \n\nlet _listeners                                = [];\n\nlet _activeScene = {name: 'default'};\n\nconst SceneTracker = {\n  setActiveScene(scene       ) {\n    _activeScene = scene;\n    _listeners.forEach(listener => listener(_activeScene));\n  },\n\n  getActiveScene()        {\n    return _activeScene;\n  },\n\n  addActiveSceneChangedListener(callback                        )   \n                       \n       \n    {\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      },\n    };\n  },\n};\n\nmodule.exports = SceneTracker;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\nexport default class HeadlessJsTaskError extends Error {}\n","export * from '../../src/private/specs/modules/NativeNetworkingAndroid';\nimport NativeNetworkingAndroid from '../../src/private/specs/modules/NativeNetworkingAndroid';\nexport default NativeNetworkingAndroid;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\nconst base64 = require('base64-js');\n\nfunction binaryToBase64(data                                )         {\n  if (data instanceof ArrayBuffer) {\n    // $FlowFixMe[reassign-const]\n    data = new Uint8Array(data);\n  }\n  if (data instanceof Uint8Array) {\n    return base64.fromByteArray(data);\n  }\n  if (!ArrayBuffer.isView(data)) {\n    throw new Error('data must be ArrayBuffer or typed array');\n  }\n  // Already checked that `data` is `DataView` in `ArrayBuffer.isView(data)`\n  const {buffer, byteOffset, byteLength}           = (data            );\n  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));\n}\n\nmodule.exports = binaryToBase64;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n                                                            \n                                                                             \n\nimport GlobalPerformanceLogger from '../Utilities/GlobalPerformanceLogger';\nimport PerformanceLoggerContext from '../Utilities/PerformanceLoggerContext';\nimport AppContainer from './AppContainer';\nimport DisplayMode, {                    } from './DisplayMode';\nimport getCachedComponentWithDebugName from './getCachedComponentWithDebugName';\nimport * as Renderer from './RendererProxy';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\n// require BackHandler so it sets the default handler that exits the app if no listeners respond\nimport '../Utilities/BackHandler';\n\n                                             \n                             \n                       \n   \n\nexport default function renderApplication               (\n  RootComponent                            ,\n  initialProps       ,\n  rootTag     ,\n  WrapperComponent                            ,\n  rootViewStyle                 ,\n  fabric          ,\n  scopedPerformanceLogger                     ,\n  isLogBox          ,\n  debugName         ,\n  displayMode                   ,\n  useConcurrentRoot          ,\n  useOffscreen          ,\n) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n\n  const performanceLogger = scopedPerformanceLogger ?? GlobalPerformanceLogger;\n\n  let renderable                     = (\n    <PerformanceLoggerContext.Provider value={performanceLogger}>\n      <AppContainer\n        rootTag={rootTag}\n        fabric={fabric}\n        WrapperComponent={WrapperComponent}\n        rootViewStyle={rootViewStyle}\n        initialProps={initialProps ?? Object.freeze({})}\n        internal_excludeLogBox={isLogBox}>\n        <RootComponent {...initialProps} rootTag={rootTag} />\n      </AppContainer>\n    </PerformanceLoggerContext.Provider>\n  );\n\n  if (__DEV__ && debugName) {\n    const RootComponentWithMeaningfulName = getCachedComponentWithDebugName(\n      `${debugName}(RootComponent)`,\n    );\n    renderable = (\n      <RootComponentWithMeaningfulName>\n        {renderable}\n      </RootComponentWithMeaningfulName>\n    );\n  }\n\n  if (useOffscreen && displayMode != null) {\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[prop-missing]\n    const Activity               = React.unstable_Activity;\n\n    renderable = (\n      <Activity\n        mode={displayMode === DisplayMode.VISIBLE ? 'visible' : 'hidden'}>\n        {renderable}\n      </Activity>\n    );\n  }\n\n  // We want to have concurrentRoot always enabled when you're on Fabric.\n  const useConcurrentRootOverride = fabric;\n\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra(\n    'usedReactConcurrentRoot',\n    useConcurrentRootOverride ? '1' : '0',\n  );\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  performanceLogger.setExtra(\n    'usedReactProfiler',\n    Renderer.isProfilingRenderer(),\n  );\n  Renderer.renderElement({\n    element: renderable,\n    rootTag,\n    useFabric: Boolean(fabric),\n    useConcurrentRoot: Boolean(useConcurrentRootOverride),\n  });\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n * @oncall react_native\n */\n\n                                          \n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport {RootTagContext, createRootTag} from './RootTag';\nimport * as React from 'react';\n\nconst AppContainer = ({\n  children,\n  fabric,\n  initialProps,\n  rootTag,\n  WrapperComponent,\n  rootViewStyle,\n}       )             => {\n  let innerView = children;\n\n  if (WrapperComponent != null) {\n    innerView = (\n      <WrapperComponent initialProps={initialProps} fabric={fabric === true}>\n        {innerView}\n      </WrapperComponent>\n    );\n  }\n\n  return (\n    <RootTagContext.Provider value={createRootTag(rootTag)}>\n      <View style={rootViewStyle || styles.root} pointerEvents=\"box-none\">\n        {innerView}\n      </View>\n    </RootTagContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {flex: 1},\n});\n\nexport default AppContainer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\nconst registry                      = new Map();\n\nconst register = (id        ) => {\n  const used = registry.get(id);\n\n  if (used != null) {\n    registry.set(id, used + 1);\n  } else {\n    registry.set(id, 1);\n  }\n};\n\nconst unregister = (id        ) => {\n  const used = registry.get(id);\n\n  if (used != null) {\n    if (used <= 1) {\n      registry.delete(id);\n    } else {\n      registry.set(id, used - 1);\n    }\n  }\n};\n\nconst has = (id        )                   => {\n  return registry.get(id) || false;\n};\n\nmodule.exports = {\n  register,\n  unregister,\n  has,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport NativeRedBox from '../NativeModules/specs/NativeRedBox';\nimport {                      } from '../vendor/emitter/EventEmitter';\nimport NativeBugReporting from './NativeBugReporting';\n\n                                              \n                                   \n                  \n                    \n                   \n     \n  \n\nfunction defaultExtras() {\n  BugReporting.addFileSource('react_hierarchy.txt', () =>\n    require('./dumpReactTree')(),\n  );\n}\n\n/**\n * A simple class for collecting bug report data. Components can add sources that will be queried when a bug report\n * is created via `collectExtraData`. For example, a list component might add a source that provides the list of rows\n * that are currently visible on screen. Components should also remember to call `remove()` on the object that is\n * returned by `addSource` when they are unmounted.\n */\nclass BugReporting {\n  static _extraSources                              = new Map();\n  static _fileSources                              = new Map();\n  static _subscription                     = null;\n  static _redboxSubscription                     = null;\n\n  static _maybeInit() {\n    if (!BugReporting._subscription) {\n      BugReporting._subscription = RCTDeviceEventEmitter.addListener(\n        'collectBugExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n      defaultExtras();\n    }\n\n    if (!BugReporting._redboxSubscription) {\n      BugReporting._redboxSubscription = RCTDeviceEventEmitter.addListener(\n        'collectRedBoxExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n    }\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addSource(\n    key        ,\n    callback                ,\n  )                            {\n    return this._addSource(key, callback, BugReporting._extraSources);\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addFileSource(\n    key        ,\n    callback                ,\n  )                            {\n    return this._addSource(key, callback, BugReporting._fileSources);\n  }\n\n  static _addSource(\n    key        ,\n    callback                ,\n    source                             ,\n  )                            {\n    BugReporting._maybeInit();\n    if (source.has(key)) {\n      console.warn(\n        `BugReporting.add* called multiple times for same key '${key}'`,\n      );\n    }\n    source.set(key, callback);\n    return {\n      remove: () => {\n        source.delete(key);\n      },\n    };\n  }\n\n  /**\n   * This can be called from a native bug reporting flow, or from JS code.\n   *\n   * If available, this will call `NativeModules.BugReporting.setExtraData(extraData)`\n   * after collecting `extraData`.\n   */\n  static collectExtraData()            {\n    const extraData            = {};\n    for (const [key, callback] of BugReporting._extraSources) {\n      extraData[key] = callback();\n    }\n    const fileData            = {};\n    for (const [key, callback] of BugReporting._fileSources) {\n      fileData[key] = callback();\n    }\n\n    if (NativeBugReporting != null && NativeBugReporting.setExtraData != null) {\n      NativeBugReporting.setExtraData(extraData, fileData);\n    }\n\n    if (NativeRedBox != null && NativeRedBox.setExtraData != null) {\n      NativeRedBox.setExtraData(extraData, 'From BugReporting.js');\n    }\n\n    return {extras: extraData, files: fileData};\n  }\n}\n\nmodule.exports = BugReporting;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\n/*\nconst getReactData = require('getReactData');\n\nconst INDENTATION_SIZE = 2;\nconst MAX_DEPTH = 2;\nconst MAX_STRING_LENGTH = 50;\n*/\n\n/**\n * Dump all React Native root views and their content. This function tries\n * it best to get the content but ultimately relies on implementation details\n * of React and will fail in future versions.\n */\nfunction dumpReactTree()         {\n  try {\n    return getReactTree();\n  } catch (e) {\n    return 'Failed to dump react tree: ' + e;\n  }\n}\n\nfunction getReactTree() {\n  // TODO(sema): Reenable tree dumps using the Fiber tree structure. #15945684\n  return (\n    'React tree dumps have been temporarily disabled while React is ' +\n    'upgraded to Fiber.'\n  );\n  /*\n  let output = '';\n  const rootIds = Object.getOwnPropertyNames(ReactNativeMount._instancesByContainerID);\n  for (const rootId of rootIds) {\n    const instance = ReactNativeMount._instancesByContainerID[rootId];\n    output += `============ Root ID: ${rootId} ============\\n`;\n    output += dumpNode(instance, 0);\n    output += `============ End root ID: ${rootId} ============\\n`;\n  }\n  return output;\n*/\n}\n\n/*\nfunction dumpNode(node: Object, indentation: number) {\n  const data = getReactData(node);\n  if (data.nodeType === 'Text') {\n    return indent(indentation) + data.text + '\\n';\n  } else if (data.nodeType === 'Empty') {\n    return '';\n  }\n  let output = indent(indentation) + `<${data.name}`;\n  if (data.nodeType === 'Composite') {\n    for (const propName of Object.getOwnPropertyNames(data.props || {})) {\n      if (isNormalProp(propName)) {\n        try {\n          const value = convertValue(data.props[propName]);\n          if (value) {\n            output += ` ${propName}=${value}`;\n          }\n        } catch (e) {\n          const message = `[Failed to get property: ${e}]`;\n          output += ` ${propName}=${message}`;\n        }\n      }\n    }\n  }\n  let childOutput = '';\n  for (const child of data.children || []) {\n    childOutput += dumpNode(child, indentation + 1);\n  }\n\n  if (childOutput) {\n    output += '>\\n' + childOutput + indent(indentation) + `</${data.name}>\\n`;\n  } else {\n    output += ' />\\n';\n  }\n\n  return output;\n}\n\nfunction isNormalProp(name: string): boolean {\n  switch (name) {\n    case 'children':\n    case 'key':\n    case 'ref':\n      return false;\n    default:\n      return true;\n  }\n}\n\nfunction convertObject(object: Object, depth: number) {\n  if (depth >= MAX_DEPTH) {\n    return '[...omitted]';\n  }\n  let output = '{';\n  let first = true;\n  for (const key of Object.getOwnPropertyNames(object)) {\n    if (!first) {\n      output += ', ';\n    }\n    output += `${key}: ${convertValue(object[key], depth + 1)}`;\n    first = false;\n  }\n  return output + '}';\n}\n\nfunction convertValue(value, depth = 0): ?string {\n  if (!value) {\n    return null;\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(possiblyEllipsis(value).replace('\\n', '\\\\n'));\n    case 'boolean':\n    case 'number':\n      return JSON.stringify(value);\n    case 'function':\n      return '[function]';\n    case 'object':\n      return convertObject(value, depth);\n    default:\n      return null;\n  }\n}\n\nfunction possiblyEllipsis(value: string) {\n  if (value.length > MAX_STRING_LENGTH) {\n    return value.slice(0, MAX_STRING_LENGTH) + '...';\n  } else {\n    return value;\n  }\n}\n\nfunction indent(size: number) {\n  return ' '.repeat(size * INDENTATION_SIZE);\n}\n*/\n\nmodule.exports = dumpReactTree;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                               \n\nimport TextAncestor from '../../Text/TextAncestor';\nimport ViewNativeComponent from './ViewNativeComponent';\nimport * as React from 'react';\n\n                              \n\n/**\n * The most fundamental component for building a UI, View is a container that\n * supports layout with flexbox, style, some touch handling, and accessibility\n * controls.\n *\n * @see https://reactnative.dev/docs/view\n */\nconst View                          \n            \n                                               \n  = React.forwardRef(\n  (\n    {\n      accessibilityElementsHidden,\n      accessibilityLabel,\n      accessibilityLabelledBy,\n      accessibilityLiveRegion,\n      accessibilityState,\n      accessibilityValue,\n      'aria-busy': ariaBusy,\n      'aria-checked': ariaChecked,\n      'aria-disabled': ariaDisabled,\n      'aria-expanded': ariaExpanded,\n      'aria-hidden': ariaHidden,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-live': ariaLive,\n      'aria-selected': ariaSelected,\n      'aria-valuemax': ariaValueMax,\n      'aria-valuemin': ariaValueMin,\n      'aria-valuenow': ariaValueNow,\n      'aria-valuetext': ariaValueText,\n      focusable,\n      id,\n      importantForAccessibility,\n      nativeID,\n      tabIndex,\n      ...otherProps\n    }           ,\n    forwardedRef,\n  ) => {\n    const hasTextAncestor = React.useContext(TextAncestor);\n    const _accessibilityLabelledBy =\n      ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n\n    let _accessibilityState;\n    if (\n      accessibilityState != null ||\n      ariaBusy != null ||\n      ariaChecked != null ||\n      ariaDisabled != null ||\n      ariaExpanded != null ||\n      ariaSelected != null\n    ) {\n      _accessibilityState = {\n        busy: ariaBusy ?? accessibilityState?.busy,\n        checked: ariaChecked ?? accessibilityState?.checked,\n        disabled: ariaDisabled ?? accessibilityState?.disabled,\n        expanded: ariaExpanded ?? accessibilityState?.expanded,\n        selected: ariaSelected ?? accessibilityState?.selected,\n      };\n    }\n    let _accessibilityValue;\n    if (\n      accessibilityValue != null ||\n      ariaValueMax != null ||\n      ariaValueMin != null ||\n      ariaValueNow != null ||\n      ariaValueText != null\n    ) {\n      _accessibilityValue = {\n        max: ariaValueMax ?? accessibilityValue?.max,\n        min: ariaValueMin ?? accessibilityValue?.min,\n        now: ariaValueNow ?? accessibilityValue?.now,\n        text: ariaValueText ?? accessibilityValue?.text,\n      };\n    }\n\n    const actualView = (\n      <ViewNativeComponent\n        {...otherProps}\n        accessibilityLiveRegion={\n          ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n        }\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        focusable={tabIndex !== undefined ? !tabIndex : focusable}\n        accessibilityState={_accessibilityState}\n        accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n        accessibilityLabelledBy={_accessibilityLabelledBy}\n        accessibilityValue={_accessibilityValue}\n        importantForAccessibility={\n          ariaHidden === true\n            ? 'no-hide-descendants'\n            : importantForAccessibility\n        }\n        nativeID={id ?? nativeID}\n        ref={forwardedRef}\n      />\n    );\n\n    if (hasTextAncestor) {\n      return (\n        <TextAncestor.Provider value={false}>\n          {actualView}\n        </TextAncestor.Provider>\n      );\n    }\n\n    return actualView;\n  },\n);\n\nView.displayName = 'View';\n\nmodule.exports = View;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n             \n         \n             \n                     \n           \n                              \n\nimport infoLog from './infoLog';\n\nconst PRINT_TO_CONSOLE        = false; // Type as false to prevent accidentally committing `true`;\n\nexport const getCurrentTimestamp               =\n  global.nativeQPLTimestamp ?? (() => global.performance.now());\n\nclass PerformanceLogger                               {\n  _timespans                             = {};\n  _extras                               = {};\n  _points                           = {};\n  _pointExtras                                = {};\n  _closed          = false;\n\n  addTimespan(\n    key        ,\n    startTime        ,\n    endTime        ,\n    startExtras         ,\n    endExtras         ,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to add a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime,\n      endTime,\n      totalTime: endTime - (startTime || 0),\n      startExtras,\n      endExtras,\n    };\n  }\n\n  append(performanceLogger                    ) {\n    this._timespans = {\n      ...performanceLogger.getTimespans(),\n      ...this._timespans,\n    };\n    this._extras = {...performanceLogger.getExtras(), ...this._extras};\n    this._points = {...performanceLogger.getPoints(), ...this._points};\n    this._pointExtras = {\n      ...performanceLogger.getPointExtras(),\n      ...this._pointExtras,\n    };\n  }\n\n  clear() {\n    this._timespans = {};\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clear');\n    }\n  }\n\n  clearCompleted() {\n    for (const key in this._timespans) {\n      if (this._timespans[key]?.totalTime != null) {\n        delete this._timespans[key];\n      }\n    }\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clearCompleted');\n    }\n  }\n\n  close() {\n    this._closed = true;\n  }\n\n  currentTimestamp()         {\n    return getCurrentTimestamp();\n  }\n\n  getExtras()                               {\n    return this._extras;\n  }\n\n  getPoints()                           {\n    return this._points;\n  }\n\n  getPointExtras()                           {\n    return this._pointExtras;\n  }\n\n  getTimespans()                             {\n    return this._timespans;\n  }\n\n  hasTimespan(key        )          {\n    return !!this._timespans[key];\n  }\n\n  isClosed()          {\n    return this._closed;\n  }\n\n  logEverything() {\n    if (PRINT_TO_CONSOLE) {\n      // log timespans\n      for (const key in this._timespans) {\n        if (this._timespans[key]?.totalTime != null) {\n          infoLog(key + ': ' + this._timespans[key].totalTime + 'ms');\n        }\n      }\n\n      // log extras\n      infoLog(this._extras);\n\n      // log points\n      for (const key in this._points) {\n        if (this._points[key] != null) {\n          infoLog(key + ': ' + this._points[key] + 'ms');\n        }\n      }\n    }\n  }\n\n  markPoint(\n    key        ,\n    timestamp          = getCurrentTimestamp(),\n    extras         ,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: markPoint - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._points[key] != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to mark a point that has been already logged ',\n          key,\n        );\n      }\n      return;\n    }\n    this._points[key] = timestamp;\n    if (extras) {\n      this._pointExtras[key] = extras;\n    }\n  }\n\n  removeExtra(key        )              {\n    const value = this._extras[key];\n    delete this._extras[key];\n    return value;\n  }\n\n  setExtra(key        , value            ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: setExtra - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    if (this._extras.hasOwnProperty(key)) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to set an extra that already exists ',\n          {key, currentValue: this._extras[key], attemptedValue: value},\n        );\n      }\n      return;\n    }\n    this._extras[key] = value;\n  }\n\n  startTimespan(\n    key        ,\n    timestamp          = getCurrentTimestamp(),\n    extras         ,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: startTimespan - has closed ignoring: ',\n          key,\n        );\n      }\n      return;\n    }\n\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to start a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime: timestamp,\n      startExtras: extras,\n    };\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'start: ' + key);\n    }\n  }\n\n  stopTimespan(\n    key        ,\n    timestamp          = getCurrentTimestamp(),\n    extras         ,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    const timespan = this._timespans[key];\n    if (!timespan || timespan.startTime == null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has not started ',\n          key,\n        );\n      }\n      return;\n    }\n    if (timespan.endTime != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has already ended ',\n          key,\n        );\n      }\n      return;\n    }\n\n    timespan.endExtras = extras;\n    timespan.endTime = timestamp;\n    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'end: ' + key);\n    }\n  }\n}\n\n// Re-exporting for backwards compatibility with all the clients that\n// may still import it from this module.\n                                                               \n\n/**\n * This function creates performance loggers that can be used to collect and log\n * various performance data such as timespans, points and extras.\n * The loggers need to have minimal overhead since they're used in production.\n */\nexport default function createPerformanceLogger()                     {\n  return new PerformanceLogger();\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\n\n/**\n * Whether the current element is the descendant of a <Text> element.\n */\nconst TextAncestorContext                            =\n  React.createContext(false);\nif (__DEV__) {\n  TextAncestorContext.displayName = 'TextAncestorContext';\n}\nmodule.exports = TextAncestorContext;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport NativeDialogManagerAndroid from '../NativeModules/specs/NativeDialogManagerAndroid';\n\nfunction emptyCallback() {}\n\nmodule.exports = {\n  alertWithArgs: function (args, callback) {\n    // TODO(5998984): Polyfill it correctly with DialogManagerAndroid\n    if (!NativeDialogManagerAndroid) {\n      return;\n    }\n\n    NativeDialogManagerAndroid.showAlert(\n      args,\n      emptyCallback,\n      callback || emptyCallback,\n    );\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                                                       \n\n/**\n * Opaque JS representation of some binary data in native.\n *\n * The API is modeled after the W3C Blob API, with one caveat\n * regarding explicit deallocation. Refer to the `close()`\n * method for further details.\n *\n * Example usage in a React component:\n *\n *   class WebSocketImage extends React.Component {\n *      state = {blob: null};\n *      componentDidMount() {\n *        let ws = this.ws = new WebSocket(...);\n *        ws.binaryType = 'blob';\n *        ws.onmessage = (event) => {\n *          if (this.state.blob) {\n *            this.state.blob.close();\n *          }\n *          this.setState({blob: event.data});\n *        };\n *      }\n *      componentUnmount() {\n *        if (this.state.blob) {\n *          this.state.blob.close();\n *        }\n *        this.ws.close();\n *      }\n *      render() {\n *        if (!this.state.blob) {\n *          return <View />;\n *        }\n *        return <Image source={{uri: URL.createObjectURL(this.state.blob)}} />;\n *      }\n *   }\n *\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob\n */\nclass Blob {\n  _data           ;\n\n  /**\n   * Constructor for JS consumers.\n   * Currently we only support creating Blobs from other Blobs.\n   * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob\n   */\n  constructor(parts                       = [], options              ) {\n    const BlobManager = require('./BlobManager');\n    this.data = BlobManager.createFromParts(parts, options).data;\n  }\n\n  /*\n   * This method is used to create a new Blob object containing\n   * the data in the specified range of bytes of the source Blob.\n   * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  set data(data           ) {\n    this._data = data;\n  }\n\n  // $FlowFixMe[unsafe-getters-setters]\n  get data()           {\n    if (!this._data) {\n      throw new Error('Blob has been closed and is no longer available');\n    }\n\n    return this._data;\n  }\n\n  slice(start         , end         , contentType         = '')       {\n    const BlobManager = require('./BlobManager');\n    let {offset, size} = this.data;\n\n    if (typeof start === 'number') {\n      if (start > size) {\n        // $FlowFixMe[reassign-const]\n        start = size;\n      }\n      offset += start;\n      size -= start;\n\n      if (typeof end === 'number') {\n        if (end < 0) {\n          // $FlowFixMe[reassign-const]\n          end = this.size + end;\n        }\n        if (end > this.size) {\n          // $FlowFixMe[reassign-const]\n          end = this.size;\n        }\n        size = end - start;\n      }\n    }\n    return BlobManager.createFromOptions({\n      blobId: this.data.blobId,\n      offset,\n      size,\n      type: contentType,\n      /* Since `blob.slice()` creates a new view onto the same binary\n       * data as the original blob, we should re-use the same collector\n       * object so that the underlying resource gets deallocated when\n       * the last view into the data is released, not the first.\n       */\n      __collector: this.data.__collector,\n    });\n  }\n\n  /**\n   * This method is in the standard, but not actually implemented by\n   * any browsers at this point. It's important for how Blobs work in\n   * React Native, however, since we cannot de-allocate resources automatically,\n   * so consumers need to explicitly de-allocate them.\n   *\n   * Note that the semantics around Blobs created via `blob.slice()`\n   * and `new Blob([blob])` are different. `blob.slice()` creates a\n   * new *view* onto the same binary data, so calling `close()` on any\n   * of those views is enough to deallocate the data, whereas\n   * `new Blob([blob, ...])` actually copies the data in memory.\n   */\n  close() {\n    const BlobManager = require('./BlobManager');\n    BlobManager.release(this.data.blobId);\n    this.data = null;\n  }\n\n  /**\n   * Size of the data contained in the Blob object, in bytes.\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  get size()         {\n    return this.data.size;\n  }\n\n  /*\n   * String indicating the MIME type of the data contained in the Blob.\n   * If the type is unknown, this string is empty.\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  get type()         {\n    return this.data.type || '';\n  }\n}\n\nmodule.exports = Blob;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                      \n\nimport NativeBlobModule from './NativeBlobModule';\nimport invariant from 'invariant';\n\nconst Blob = require('./Blob');\nconst BlobRegistry = require('./BlobRegistry');\n\n/*eslint-disable no-bitwise */\n/*eslint-disable eqeqeq */\n\n/**\n * Based on the rfc4122-compliant solution posted at\n * http://stackoverflow.com/questions/105034\n */\nfunction uuidv4()         {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n// **Temporary workaround**\n// TODO(#24654): Use turbomodules for the Blob module.\n// Blob collector is a jsi::HostObject that is used by native to know\n// when the a Blob instance is deallocated. This allows to free the\n// underlying native resources. This is a hack to workaround the fact\n// that the current bridge infra doesn't allow to track js objects\n// deallocation. Ideally the whole Blob object should be a jsi::HostObject.\nfunction createBlobCollector(blobId        )                       {\n  if (global.__blobCollectorProvider == null) {\n    return null;\n  } else {\n    return global.__blobCollectorProvider(blobId);\n  }\n}\n\n/**\n * Module to manage blobs. Wrapper around the native blob module.\n */\nclass BlobManager {\n  /**\n   * If the native blob module is available.\n   */\n  static isAvailable          = !!NativeBlobModule;\n\n  /**\n   * Create blob from existing array of blobs.\n   */\n  static createFromParts(\n    parts                      ,\n    options              ,\n  )       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    const blobId = uuidv4();\n    const items = parts.map(part => {\n      if (part instanceof ArrayBuffer || ArrayBuffer.isView(part)) {\n        throw new Error(\n          \"Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported\",\n        );\n      }\n      if (part instanceof Blob) {\n        return {\n          data: part.data,\n          type: 'blob',\n        };\n      } else {\n        return {\n          data: String(part),\n          type: 'string',\n        };\n      }\n    });\n    const size = items.reduce((acc, curr) => {\n      if (curr.type === 'string') {\n        return acc + global.unescape(encodeURI(curr.data)).length;\n      } else {\n        return acc + curr.data.size;\n      }\n    }, 0);\n\n    NativeBlobModule.createFromParts(items, blobId);\n\n    return BlobManager.createFromOptions({\n      blobId,\n      offset: 0,\n      size,\n      type: options ? options.type : '',\n      lastModified: options ? options.lastModified : Date.now(),\n    });\n  }\n\n  /**\n   * Create blob instance from blob data from native.\n   * Used internally by modules like XHR, WebSocket, etc.\n   */\n  static createFromOptions(options          )       {\n    BlobRegistry.register(options.blobId);\n    // $FlowFixMe[prop-missing]\n    return Object.assign(Object.create(Blob.prototype), {\n      data:\n        // Reuse the collector instance when creating from an existing blob.\n        // This will make sure that the underlying resource is only deallocated\n        // when all blobs that refer to it are deallocated.\n        options.__collector == null\n          ? {\n              ...options,\n              __collector: createBlobCollector(options.blobId),\n            }\n          : options,\n    });\n  }\n\n  /**\n   * Deallocate resources for a blob.\n   */\n  static release(blobId        )       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    BlobRegistry.unregister(blobId);\n    if (BlobRegistry.has(blobId)) {\n      return;\n    }\n    NativeBlobModule.release(blobId);\n  }\n\n  /**\n   * Inject the blob content handler in the networking module to support blob\n   * requests and responses.\n   */\n  static addNetworkingHandler()       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addNetworkingHandler();\n  }\n\n  /**\n   * Indicate the websocket should return a blob for incoming binary\n   * messages.\n   */\n  static addWebSocketHandler(socketId        )       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addWebSocketHandler(socketId);\n  }\n\n  /**\n   * Indicate the websocket should no longer return a blob for incoming\n   * binary messages.\n   */\n  static removeWebSocketHandler(socketId        )       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.removeWebSocketHandler(socketId);\n  }\n\n  /**\n   * Send a blob message to a websocket.\n   */\n  static sendOverSocket(blob      , socketId        )       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.sendOverSocket(blob.data, socketId);\n  }\n}\n\nmodule.exports = BlobManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n             \n                          \n                                         \n                                             \n                          \n                              \n                      \n                         \n                             \n                         \n                             \n                           \n\nimport composeStyles from '../../src/private/styles/composeStyles';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst PixelRatio = require('../Utilities/PixelRatio').default;\nconst flatten = require('./flattenStyle');\n\n                                                        \n\n/**\n * This type should be used as the type for anything that is a color. It is\n * most useful when using DynamicColorIOS which can be a string or a dynamic\n * color object.\n *\n * type props = {backgroundColor: ColorValue};\n */\n                                                 \n\n/**\n * This type should be used as the type for a prop that is passed through\n * to a <View>'s `style` prop. This ensures call sites of the component\n * can't pass styles that View doesn't support such as `fontSize`.`\n *\n * type Props = {style: ViewStyleProp}\n * const MyComponent = (props: Props) => <View style={props.style} />\n */\n                                                       \n\n/**\n * This type should be used as the type for a prop that is passed through\n * to a <Text>'s `style` prop. This ensures call sites of the component\n * can't pass styles that Text doesn't support such as `resizeMode`.`\n *\n * type Props = {style: TextStyleProp}\n * const MyComponent = (props: Props) => <Text style={props.style} />\n */\n                                                       \n\n/**\n * This type should be used as the type for a prop that is passed through\n * to an <Image>'s `style` prop. This ensures call sites of the component\n * can't pass styles that Image doesn't support such as `fontSize`.`\n *\n * type Props = {style: ImageStyleProp}\n * const MyComponent = (props: Props) => <Image style={props.style} />\n */\n                                                         \n\n/**\n * WARNING: You probably shouldn't be using this type. This type\n * is similar to the ones above except it allows styles that are accepted\n * by all of View, Text, or Image. It is therefore very unsafe to pass this\n * through to an underlying component. Using this is almost always a mistake\n * and using one of the other more restrictive types is likely the right choice.\n */\n                                           \n                                             \n\n/**\n * Utility type for getting the values for specific style keys.\n *\n * The following is bad because position is more restrictive than 'string':\n * ```\n * type Props = {position: string};\n * ```\n *\n * You should use the following instead:\n *\n * ```\n * type Props = {position: TypeForStyleKey<'position'>};\n * ```\n *\n * This will correctly give you the type 'absolute' | 'relative'\n */\n                            \n                                                      \n                                                              \n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for View.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using ViewStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to a View that can't be precomputed with\n * StyleSheet.create.\n */\n                                               \n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for Text.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using TextStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to a Text that can't be precomputed with\n * StyleSheet.create.\n */\n                                               \n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for Image.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using ImageStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to an Image that can't be precomputed with\n * StyleSheet.create.\n */\n                                                 \n\n/**\n * WARNING: You probably shouldn't be using this type. This type is an object\n * with all possible style keys and their values. Note that this isn't\n * a safe way to type a style prop for a component as results from\n * StyleSheet.create return an internal identifier, not an object of styles.\n *\n * If you want to type the style prop of a function, consider using\n * ViewStyleProp, TextStyleProp, or ImageStyleProp.\n *\n * This should only be used by very core utilities that operate on an object\n * containing any possible style value.\n */\n                                                                               \n\nlet hairlineWidth         = PixelRatio.roundToNearestPixel(0.4);\nif (hairlineWidth === 0) {\n  hairlineWidth = 1 / PixelRatio.get();\n}\n\nconst absoluteFill = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n};\nif (__DEV__) {\n  Object.freeze(absoluteFill);\n}\n\n/**\n * A StyleSheet is an abstraction similar to CSS StyleSheets\n *\n * Create a new StyleSheet:\n *\n * ```\n * const styles = StyleSheet.create({\n *   container: {\n *     borderRadius: 4,\n *     borderWidth: 0.5,\n *     borderColor: '#d6d7da',\n *   },\n *   title: {\n *     fontSize: 19,\n *     fontWeight: 'bold',\n *   },\n *   activeTitle: {\n *     color: 'red',\n *   },\n * });\n * ```\n *\n * Use a StyleSheet:\n *\n * ```\n * <View style={styles.container}>\n *   <Text style={[styles.title, this.props.isActive && styles.activeTitle]} />\n * </View>\n * ```\n *\n * Code quality:\n *\n *  - By moving styles away from the render function, you're making the code\n *    easier to understand.\n *  - Naming the styles is a good way to add meaning to the low level components\n *  in the render function, and encourage reuse.\n *  - In most IDEs, using `StyleSheet.create()` will offer static type checking\n *  and suggestions to help you write valid styles.\n *\n */\nmodule.exports = {\n  /**\n   * This is defined as the width of a thin line on the platform. It can be\n   * used as the thickness of a border or division between two elements.\n   * Example:\n   * ```\n   *   {\n   *     borderBottomColor: '#bbb',\n   *     borderBottomWidth: StyleSheet.hairlineWidth\n   *   }\n   * ```\n   *\n   * This constant will always be a round number of pixels (so a line defined\n   * by it look crisp) and will try to match the standard width of a thin line\n   * on the underlying platform. However, you should not rely on it being a\n   * constant size, because on different platforms and screen densities its\n   * value may be calculated differently.\n   *\n   * A line with hairline width may not be visible if your simulator is downscaled.\n   */\n  hairlineWidth,\n\n  /**\n   * A very common pattern is to create overlays with position absolute and zero positioning,\n   * so `absoluteFill` can be used for convenience and to reduce duplication of these repeated\n   * styles.\n   */\n  absoluteFill: (absoluteFill     ), // TODO: This should be updated after we fix downstream Flow sites.\n\n  /**\n   * Sometimes you may want `absoluteFill` but with a couple tweaks - `absoluteFillObject` can be\n   * used to create a customized entry in a `StyleSheet`, e.g.:\n   *\n   *   const styles = StyleSheet.create({\n   *     wrapper: {\n   *       ...StyleSheet.absoluteFillObject,\n   *       top: 10,\n   *       backgroundColor: 'transparent',\n   *     },\n   *   });\n   */\n  absoluteFillObject: absoluteFill,\n\n  /**\n   * Combines two styles such that `style2` will override any styles in `style1`.\n   * If either style is falsy, the other one is returned without allocating an\n   * array, saving allocations and maintaining reference equality for\n   * PureComponent checks.\n   */\n  compose: composeStyles,\n\n  /**\n   * Flattens an array of style objects, into one aggregated style object.\n   *\n   * Example:\n   * ```\n   * const styles = StyleSheet.create({\n   *   listItem: {\n   *     flex: 1,\n   *     fontSize: 16,\n   *     color: 'white'\n   *   },\n   *   selectedListItem: {\n   *     color: 'green'\n   *   }\n   * });\n   *\n   * StyleSheet.flatten([styles.listItem, styles.selectedListItem])\n   * // returns { flex: 1, fontSize: 16, color: 'green' }\n   * ```\n   */\n  flatten,\n\n  /**\n   * WARNING: EXPERIMENTAL. Breaking changes will probably happen a lot and will\n   * not be reliably announced. The whole thing might be deleted, who knows? Use\n   * at your own risk.\n   *\n   * Sets a function to use to pre-process a style property value. This is used\n   * internally to process color and transform values. You should not use this\n   * unless you really know what you are doing and have exhausted other options.\n   */\n  setStyleAttributePreprocessor(\n    property        ,\n    process                            ,\n  ) {\n    let value;\n\n    if (ReactNativeStyleAttributes[property] === true) {\n      value = {process};\n    } else if (typeof ReactNativeStyleAttributes[property] === 'object') {\n      value = {...ReactNativeStyleAttributes[property], process};\n    } else {\n      console.error(`${property} is not a valid style attribute`);\n      return;\n    }\n\n    if (\n      __DEV__ &&\n      typeof value.process === 'function' &&\n      typeof ReactNativeStyleAttributes[property]?.process === 'function' &&\n      value.process !== ReactNativeStyleAttributes[property]?.process\n    ) {\n      console.warn(`Overwriting ${property} style attribute preprocessor`);\n    }\n\n    ReactNativeStyleAttributes[property] = value;\n  },\n\n  /**\n   * An identity function for creating style sheets.\n   */\n  // $FlowFixMe[unsupported-variance-annotation]\n  create                         (obj   )               {\n    // TODO: This should return S as the return type. But first,\n    // we need to codemod all the callsites that are typing this\n    // return value as a number (even though it was opaque).\n    if (__DEV__) {\n      for (const key in obj) {\n        if (obj[key]) {\n          Object.freeze(obj[key]);\n        }\n      }\n    }\n    return obj;\n  },\n};\n","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                          \n                           \n                         \n   \n                                           \n                                 \n                                    \n                                             \n                                                \n                                                            \n                                                                   \n                                     \n \nconst NativeModule = TurboModuleRegistry.get      ('BlobModule');\nlet constants = null;\nlet NativeBlobModule = null;\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants()            {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n      return constants;\n    },\n    addNetworkingHandler()       {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler(id        )       {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler(id        )       {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket(blob        , socketID        )       {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts(parts               , withId        )       {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release(blobId        )       {\n      NativeModule.release(blobId);\n    }\n  };\n}\nexport default (NativeBlobModule       );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                           \n                              \n                              \n                 \n                   \n                          \n                          \n                         \n                        \n                       \n   \n                                           \n                         \n                                 \n                             \n                                     \n                                     \n                                    \n     \n                                                                                                                                                       \n \nexport default (TurboModuleRegistry.get      ('DialogManagerAndroid')       );","                                                                                              \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport Platform from '../../Utilities/Platform';\nimport {                         } from './ViewPropTypes';\nimport * as React from 'react';\nexport const __INTERNAL_VIEW_CONFIG                    = Platform.OS === 'android' ? {\n  uiViewClassName: 'RCTView',\n  validAttributes: {\n    removeClippedSubviews: true,\n    accessible: true,\n    hasTVPreferredFocus: true,\n    nextFocusDown: true,\n    nextFocusForward: true,\n    nextFocusLeft: true,\n    nextFocusRight: true,\n    nextFocusUp: true,\n    borderRadius: true,\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n    borderTopStartRadius: true,\n    borderTopEndRadius: true,\n    borderBottomStartRadius: true,\n    borderBottomEndRadius: true,\n    borderEndEndRadius: true,\n    borderEndStartRadius: true,\n    borderStartEndRadius: true,\n    borderStartStartRadius: true,\n    borderStyle: true,\n    hitSlop: true,\n    pointerEvents: true,\n    nativeBackgroundAndroid: true,\n    nativeForegroundAndroid: true,\n    needsOffscreenAlphaCompositing: true,\n    borderWidth: true,\n    borderLeftWidth: true,\n    borderRightWidth: true,\n    borderTopWidth: true,\n    borderBottomWidth: true,\n    borderStartWidth: true,\n    borderEndWidth: true,\n    borderColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderLeftColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderRightColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderTopColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderBottomColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderStartColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderEndColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderBlockColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderBlockEndColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderBlockStartColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    focusable: true,\n    overflow: true,\n    backfaceVisibility: true,\n    experimental_layoutConformance: true\n  }\n} : {\n  uiViewClassName: 'RCTView'\n};\nconst ViewNativeComponent                       = NativeComponentRegistry.get       ('RCTView', () => __INTERNAL_VIEW_CONFIG);\n                          \n                                                                                                  \n                                                                                           \n \nexport const Commands                 = codegenNativeCommands                ({\n  supportedCommands: ['hotspotUpdate', 'setPressed']\n});\nexport default ViewNativeComponent;\n                                                           ","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n                                                            \n                                                   \n                                                                             \n                                                   \n\nimport registerCallableModule from '../Core/registerCallableModule';\nimport BugReporting from '../BugReporting/BugReporting';\nimport createPerformanceLogger from '../Utilities/createPerformanceLogger';\nimport infoLog from '../Utilities/infoLog';\nimport SceneTracker from '../Utilities/SceneTracker';\nimport {coerceDisplayMode} from './DisplayMode';\nimport HeadlessJsTaskError from './HeadlessJsTaskError';\nimport NativeHeadlessJsTaskSupport from './NativeHeadlessJsTaskSupport';\nimport renderApplication from './renderApplication';\nimport {unmountComponentAtNodeAndRemoveContainer} from './RendererProxy';\nimport invariant from 'invariant';\n\n                                             \n                                      \n                                \n                                              \n\n                                                               \n                                                    \n                                \n                                              \n                              \n                         \n                 \n                                \n                 \n                    \n     \n  \n                      \n                                                  \n                   \n                   \n                           \n  \n                        \n                               \n                               \n          \n                                                     \n                        \n                                   \n                       \n     \n  \n                                        \n                        \n                              \n                                                                             \n\nconst runnables            = {};\nlet runCount = 1;\nconst sections            = {};\nconst taskProviders                            = new Map();\nconst taskCancelProviders                                  = new Map();\nlet componentProviderInstrumentationHook                                       =\n  (component                   ) => component();\n\nlet wrapperComponentProvider                           ;\nlet rootViewStyleProvider                        ;\n\n/**\n * `AppRegistry` is the JavaScript entry point to running all React Native apps.\n *\n * See https://reactnative.dev/docs/appregistry\n */\nconst AppRegistry = {\n  setWrapperComponentProvider(provider                          ) {\n    wrapperComponentProvider = provider;\n  },\n\n  setRootViewStyleProvider(provider                       ) {\n    rootViewStyleProvider = provider;\n  },\n\n  registerConfig(config                  )       {\n    config.forEach(appConfig => {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(\n          appConfig.component != null,\n          'AppRegistry.registerConfig(...): Every config is expected to set ' +\n            'either `run` or `component`, but `%s` has neither.',\n          appConfig.appKey,\n        );\n        AppRegistry.registerComponent(\n          appConfig.appKey,\n          appConfig.component,\n          appConfig.section,\n        );\n      }\n    });\n  },\n\n  /**\n   * Registers an app's root component.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercomponent\n   */\n  registerComponent(\n    appKey        ,\n    componentProvider                   ,\n    section          ,\n  )         {\n    const scopedPerformanceLogger = createPerformanceLogger();\n    runnables[appKey] = (appParameters, displayMode) => {\n      const concurrentRootEnabled = Boolean(\n        appParameters.initialProps?.concurrentRoot ||\n          appParameters.concurrentRoot,\n      );\n      renderApplication(\n        componentProviderInstrumentationHook(\n          componentProvider,\n          scopedPerformanceLogger,\n        ),\n        appParameters.initialProps,\n        appParameters.rootTag,\n        wrapperComponentProvider && wrapperComponentProvider(appParameters),\n        rootViewStyleProvider && rootViewStyleProvider(appParameters),\n        appParameters.fabric,\n        scopedPerformanceLogger,\n        appKey === 'LogBox', // is logbox\n        appKey,\n        displayMode,\n        concurrentRootEnabled,\n      );\n    };\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n    return appKey;\n  },\n\n  registerRunnable(appKey        , run          )         {\n    runnables[appKey] = run;\n    return appKey;\n  },\n\n  registerSection(appKey        , component                   )       {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n\n  getAppKeys()                         {\n    return Object.keys(runnables);\n  },\n\n  getSectionKeys()                         {\n    return Object.keys(sections);\n  },\n\n  getSections()            {\n    return {\n      ...sections,\n    };\n  },\n\n  getRunnable(appKey        )            {\n    return runnables[appKey];\n  },\n\n  getRegistry()           {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: {...runnables},\n    };\n  },\n\n  setComponentProviderInstrumentationHook(\n    hook                                      ,\n  ) {\n    componentProviderInstrumentationHook = hook;\n  },\n\n  /**\n   * Loads the JavaScript bundle and runs the app.\n   *\n   * See https://reactnative.dev/docs/appregistry#runapplication\n   */\n  runApplication(\n    appKey        ,\n    appParameters               ,\n    displayMode         ,\n  )       {\n    if (appKey !== 'LogBox') {\n      const logParams = __DEV__ ? ` with ${JSON.stringify(appParameters)}` : '';\n      const msg = `Running \"${appKey}\"${logParams}`;\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.runApplication' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey],\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    SceneTracker.setActiveScene({name: appKey});\n    runnables[appKey](appParameters, coerceDisplayMode(displayMode));\n  },\n\n  /**\n   * Update initial props for a surface that's already rendered\n   */\n  setSurfaceProps(\n    appKey        ,\n    appParameters        ,\n    displayMode         ,\n  )       {\n    if (appKey !== 'LogBox') {\n      const msg =\n        'Updating props for Surface \"' +\n        appKey +\n        '\" with ' +\n        JSON.stringify(appParameters);\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.setSurfaceProps' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey],\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    runnables[appKey](appParameters, coerceDisplayMode(displayMode));\n  },\n\n  /**\n   * Stops an application when a view should be destroyed.\n   *\n   * See https://reactnative.dev/docs/appregistry#unmountapplicationcomponentatroottag\n   */\n  unmountApplicationComponentAtRootTag(rootTag         )       {\n    unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n\n  /**\n   * Register a headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registerheadlesstask\n   */\n  registerHeadlessTask(taskKey        , taskProvider              )       {\n    // $FlowFixMe[object-this-reference]\n    this.registerCancellableHeadlessTask(taskKey, taskProvider, () => () => {\n      /* Cancel is no-op */\n    });\n  },\n\n  /**\n   * Register a cancellable headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercancellableheadlesstask\n   */\n  registerCancellableHeadlessTask(\n    taskKey        ,\n    taskProvider              ,\n    taskCancelProvider                    ,\n  )       {\n    if (taskProviders.has(taskKey)) {\n      console.warn(\n        `registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${taskKey}'`,\n      );\n    }\n    taskProviders.set(taskKey, taskProvider);\n    taskCancelProviders.set(taskKey, taskCancelProvider);\n  },\n\n  /**\n   * Only called from native code. Starts a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#startheadlesstask\n   */\n  startHeadlessTask(taskId        , taskKey        , data     )       {\n    const taskProvider = taskProviders.get(taskKey);\n    if (!taskProvider) {\n      console.warn(`No task registered for key ${taskKey}`);\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n      return;\n    }\n    taskProvider()(data)\n      .then(() => {\n        if (NativeHeadlessJsTaskSupport) {\n          NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n        }\n      })\n      .catch(reason => {\n        console.error(reason);\n\n        if (\n          NativeHeadlessJsTaskSupport &&\n          reason instanceof HeadlessJsTaskError\n        ) {\n          // $FlowFixMe[unused-promise]\n          NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(\n            retryPosted => {\n              if (!retryPosted) {\n                NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n              }\n            },\n          );\n        }\n      });\n  },\n\n  /**\n   * Only called from native code. Cancels a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#cancelheadlesstask\n   */\n  cancelHeadlessTask(taskId        , taskKey        )       {\n    const taskCancelProvider = taskCancelProviders.get(taskKey);\n    if (!taskCancelProvider) {\n      throw new Error(`No task canceller registered for key '${taskKey}'`);\n    }\n    taskCancelProvider()();\n  },\n};\n\n// Register LogBox as a default surface\nAppRegistry.registerComponent('LogBox', () => {\n  if (__DEV__ && typeof jest === 'undefined') {\n    return require('../LogBox/LogBoxInspectorContainer').default;\n  } else {\n    return function NoOp() {\n      return null;\n    };\n  }\n});\n\nglobal.RN$AppRegistry = AppRegistry;\n\n// Backwards compat with SurfaceRegistry, remove me later\nglobal.RN$SurfaceRegistry = {\n  renderSurface: AppRegistry.runApplication,\n  setSurfaceProps: AppRegistry.setSurfaceProps,\n};\n\nif (global.RN$Bridgeless === true) {\n  console.log('Bridgeless mode is enabled');\n}\n\nregisterCallableModule('AppRegistry', AppRegistry);\n\nmodule.exports = AppRegistry;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\nconst Blob = require('../Blob/Blob');\nconst binaryToBase64 = require('../Utilities/binaryToBase64');\nconst FormData = require('./FormData');\n\n                         \n          \n        \n            \n                      \n               \n                     \n\nfunction convertRequestBody(body             )         {\n  if (typeof body === 'string') {\n    return {string: body};\n  }\n  if (body instanceof Blob) {\n    return {blob: body.data};\n  }\n  if (body instanceof FormData) {\n    return {formData: body.getParts()};\n  }\n  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n    /* $FlowFixMe[incompatible-call] : no way to assert that 'body' is indeed\n     * an ArrayBufferView */\n    return {base64: binaryToBase64(body)};\n  }\n  return body;\n}\n\nmodule.exports = convertRequestBody;\n"],"names":["RCTNativeAppEventEmitter","_RCTDeviceEventEmitter","module","_default","_NativeHeadlessJsTaskSupport","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","getLens","b64","Error","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","extraBytes","parts","maxChunkLength","len2","_TurboModuleRegistry","GlobalPerformanceLogger","_createPerformanceLogger","AppContainer","__DEV__","require","invariant","levelsMap","warningHandler","RCTLog","level","_key","args","global","_RCTLog","_console","logFn","Object","handler","composeStyles","style1","style2","_NativeRedBox","NativeEventEmitter","nativeModule","_Platform","_invariant","hasAddListener","hasRemoveListeners","console","addListener","eventType","listener","context","_this__nativeModule","subscription","emit","_RCTDeviceEventEmitter1","removeAllListeners","listenerCount","convertHeadersMapToArray","headers","headerArray","name","_requestId","generateRequestId","RCTNetworking","_NativeNetworkingAndroid","sendRequest","method","trackingName","url","data","responseType","incrementalUpdates","timeout","callback","withCredentials","body","_convertRequestBody","part","requestId","abortRequest","clearCookies","_NativeEventEmitter","registerCallableModule","moduleOrFactory","BatchedBridge","DEVICE_BACK_EVENT","_backPressSubscriptions","BackHandler","exitApp","_NativeDeviceEventManager","addEventListener","eventName","removeEventListener","index","_object_without_properties_loose","source","excluded","target","sourceKeys","key","getCachedComponentWithDisplayName","cache","Map","displayName","ComponentWithDisplayName","children","_NativeBlobModule","Alert","alert","title","message","buttons","options","undefined","NativeDialogManagerAndroid","constants","config","defaultPositiveText","validButtons","buttonPositive","buttonNegative","buttonNeutral","onAction","action","buttonKey","onError","errorMessage","prompt","callbackOrButtons","type","defaultValue","keyboardType","callbacks","cancelButtonKey","destructiveButtonKey","preferredButtonKey","btn","String","btnDef","_RCTAlertManager","id","value","cb","infoLog","_NativeDialogManagerAndroid","_NativeBugReporting","usePerformanceLogger","PerformanceLoggerContext","_react","_GlobalPerformanceLogger","coerceDisplayMode","DisplayMode","FormData","append","getAll","getParts","contentDisposition","_type_of","encodeURI","_listeners","_activeScene","SceneTracker","scene","HeadlessJsTaskError","base64","binaryToBase64","ArrayBuffer","buffer","byteOffset","renderApplication","RootComponent","initialProps","rootTag","WrapperComponent","rootViewStyle","fabric","scopedPerformanceLogger","isLogBox","debugName","displayMode","useConcurrentRoot","useOffscreen","performanceLogger","renderable","_PerformanceLoggerContext","_AppContainer","RootComponentWithMeaningfulName","_getCachedComponentWithDebugName","Activity","_DisplayMode","useConcurrentRootOverride","_RendererProxy","Boolean","innerView","_RootTag","_View","styles","_StyleSheet","registry","register","used","unregister","has","defaultExtras","BugReporting","_maybeInit","addSource","addFileSource","_addSource","collectExtraData","extraData","_BugReporting__extraSources","fileData","_BugReporting__fileSources","key1","callback1","dumpReactTree","getReactTree","e","View","forwardedRef","accessibilityElementsHidden","accessibilityLabel","accessibilityLabelledBy","accessibilityLiveRegion","accessibilityState","accessibilityValue","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaHidden","ariaLabel","ariaLabelledBy","ariaLive","ariaSelected","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","focusable","importantForAccessibility","nativeID","tabIndex","otherProps","hasTextAncestor","_TextAncestor","_ariaLabelledBy_split","_accessibilityLabelledBy","_accessibilityState","_accessibilityValue","actualView","_ViewNativeComponent","createPerformanceLogger","getCurrentTimestamp","PRINT_TO_CONSOLE","_global_nativeQPLTimestamp","PerformanceLogger","addTimespan","startTime","endTime","startExtras","endExtras","_infoLog","clear","clearCompleted","_this__timespans_key","close","currentTimestamp","getExtras","getPoints","getPointExtras","getTimespans","hasTimespan","isClosed","logEverything","markPoint","timestamp","extras","removeExtra","setExtra","startTimespan","stopTimespan","timespan","React","TextAncestorContext","emptyCallback","alertWithArgs","Blob","BlobManager","slice","contentType","_this_data","offset","size","BlobRegistry","uuidv4","c","r","Math","v","createBlobCollector","blobId","createFromParts","items","acc","curr","Date","createFromOptions","release","addNetworkingHandler","addWebSocketHandler","socketId","removeWebSocketHandler","sendOverSocket","blob","ReactNativeStyleAttributes","PixelRatio","flatten","hairlineWidth","absoluteFill","_composeStyles","property","process","_ReactNativeStyleAttributes_property","_ReactNativeStyleAttributes_property1","obj","NativeModule","NativeBlobModule","socketID","withId","Commands","__INTERNAL_VIEW_CONFIG","ViewNativeComponent","_NativeComponentRegistry","_codegenNativeCommands","runnables","runCount","sections","taskProviders","taskCancelProviders","componentProviderInstrumentationHook","component","wrapperComponentProvider","rootViewStyleProvider","AppRegistry","provider","appConfig","appKey","componentProvider","section","appParameters","_appParameters_initialProps","concurrentRootEnabled","_renderApplication","run","hook","logParams","JSON","msg","_BugReporting","_SceneTracker","taskKey","taskProvider","taskCancelProvider","taskId","reason","_HeadlessJsTaskError","retryPosted","jest","NoOp","_registerCallableModule","convertRequestBody"],"mappings":"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"}