(self["webpackChunksas_auth"] = self["webpackChunksas_auth"] || []).push([["node_modules_invariant_browser_js-node_modules_react-native_Libraries_StyleSheet_processColor-5fa1bb"], {
16250: (function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _interop_require_wildcard = __webpack_require__(38504);
var _TurboModuleRegistry = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(66030));
var _default = _TurboModuleRegistry.getEnforcing('PlatformConstants');


}),
27761: (function (module) {
"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 
/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */ var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (false) {}
    if (!condition) {
        var error;
        if (format === undefined) {
            error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
            var args = [
                a,
                b,
                c,
                d,
                e,
                f
            ];
            var argIndex = 0;
            error = new Error(format.replace(/%s/g, function() {
                return args[argIndex++];
            }));
            error.name = 'Invariant Violation';
        }
        error.framesToPop = 1; // we don't care about invariant's own frame
        throw error;
    }
};
module.exports = invariant;


}),
29861: (function (module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _interop_require_default = __webpack_require__(48810);
var _NativePlatformConstantsAndroid = /*#__PURE__*/ _interop_require_default._(__webpack_require__(43498));
var Platform = {
    __constants: null,
    OS: 'android',
    // $FlowFixMe[unsafe-getters-setters]
    get Version () {
        // $FlowFixMe[object-this-reference]
        return this.constants.Version;
    },
    // $FlowFixMe[unsafe-getters-setters]
    get constants () {
        // $FlowFixMe[object-this-reference]
        if (this.__constants == null) {
            // $FlowFixMe[object-this-reference]
            this.__constants = _NativePlatformConstantsAndroid.default.getConstants();
        }
        // $FlowFixMe[object-this-reference]
        return this.__constants;
    },
    // $FlowFixMe[unsafe-getters-setters]
    get isTesting () {
        if (false) {}
        return false;
    },
    // $FlowFixMe[unsafe-getters-setters]
    get isDisableAnimations () {
        var _this_constants_isDisableAnimations;
        // $FlowFixMe[object-this-reference]
        return (_this_constants_isDisableAnimations = this.constants.isDisableAnimations) != null ? _this_constants_isDisableAnimations : this.isTesting;
    },
    // $FlowFixMe[unsafe-getters-setters]
    get isTV () {
        // $FlowFixMe[object-this-reference]
        return this.constants.uiMode === 'tv';
    },
    // $FlowFixMe[unsafe-getters-setters]
    get isVision () {
        return false;
    },
    select: function(spec) {
        return 'android' in spec ? spec.android : 'native' in spec ? spec["native"] : spec["default"];
    }
};
module.exports = Platform;


}),
43080: (function (module, exports, __webpack_require__) {
"use strict";
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _interop_require_default = __webpack_require__(48810);
var _processColor = /*#__PURE__*/ _interop_require_default._(__webpack_require__(83900));
var TRANSPARENT = 0; // rgba(0, 0, 0, 0)
function processColorArray(colors) {
    return colors == null ? null : colors.map(processColorElement);
}
function processColorElement(color) {
    var value = (0, _processColor.default)(color);
    // For invalid colors, fallback to transparent.
    if (value == null) {
        console.error('Invalid value in color array:', color);
        return TRANSPARENT;
    }
    return value;
}
module.exports = processColorArray;


}),
43498: (function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _export_star = __webpack_require__(30478);
var _interop_require_default = __webpack_require__(48810);
var _NativePlatformConstantsAndroid = /*#__PURE__*/ _interop_require_default._(_export_star._(__webpack_require__(16250), exports));
var _default = _NativePlatformConstantsAndroid.default;


}),
83900: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _type_of = __webpack_require__(29936);
var Platform = __webpack_require__(29861);
var normalizeColor = __webpack_require__(89103);
/* eslint no-bitwise: 0 */ function processColor(color) {
    if (color === undefined || color === null) {
        return color;
    }
    var normalizedColor = normalizeColor(color);
    if (normalizedColor === null || normalizedColor === undefined) {
        return undefined;
    }
    if ((typeof normalizedColor === "undefined" ? "undefined" : _type_of._(normalizedColor)) === 'object') {
        var processColorObject = (__webpack_require__(99321)/* .processColorObject */.processColorObject);
        var processedColorObj = processColorObject(normalizedColor);
        if (processedColorObj != null) {
            return processedColorObj;
        }
    }
    if (typeof normalizedColor !== 'number') {
        return null;
    }
    // Converts 0xrrggbbaa into 0xaarrggbb
    normalizedColor = (normalizedColor << 24 | normalizedColor >>> 8) >>> 0;
    if (Platform.OS === 'android') {
        // Android use 32 bit *signed* integer to represent the color
        // We utilize the fact that bitwise operations in JS also operates on
        // signed 32 bit integers, so that we can use those to convert from
        // *unsigned* to *signed* 32bit int that way.
        normalizedColor = normalizedColor | 0x0;
    }
    return normalizedColor;
}
var _default = processColor;


}),
89103: (function (module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ /* eslint no-bitwise: 0 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _interop_require_default = __webpack_require__(48810);
var _type_of = __webpack_require__(29936);
var _normalizecolors = /*#__PURE__*/ _interop_require_default._(__webpack_require__(13520));
function normalizeColor(color) {
    if ((typeof color === "undefined" ? "undefined" : _type_of._(color)) === 'object' && color != null) {
        var normalizeColorObject = (__webpack_require__(99321)/* .normalizeColorObject */.normalizeColorObject);
        var normalizedColor = normalizeColorObject(color);
        if (normalizedColor != null) {
            return normalizedColor;
        }
    }
    if (typeof color === 'string' || typeof color === 'number') {
        return (0, _normalizecolors.default)(color);
    }
}
module.exports = normalizeColor;


}),
99321: (function (__unused_webpack_module, exports) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ /** The actual type of the opaque NativeColorValue on Android platform */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get PlatformColor () {
        return PlatformColor;
    },
    get normalizeColorObject () {
        return normalizeColorObject;
    },
    get processColorObject () {
        return processColorObject;
    }
});
var PlatformColor = function() {
    for(var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++){
        names[_key] = arguments[_key];
    }
    /* $FlowExpectedError[incompatible-return]
   * LocalNativeColorValue is the actual type of the opaque NativeColorValue on Android platform */ return {
        resource_paths: names
    };
};
var normalizeColorObject = function(color) {
    /* $FlowExpectedError[incompatible-cast]
   * LocalNativeColorValue is the actual type of the opaque NativeColorValue on Android platform */ if ('resource_paths' in color) {
        return color;
    }
    return null;
};
var processColorObject = function(color) {
    return color;
};


}),

}]);//# sourceMappingURL=node_modules_invariant_browser_js-node_modules_react-native_Libraries_StyleSheet_processColor-5fa1bb.chunk.bundle.map?platform=android/* RCSSB */eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiYmUzYWMyMDZmYTZmODJhZGZhNzVkZTg0ZTI2MTFmMjA2YmU3NTYzZDdkMjhlMjVjM2Q5MjBlOGI3N2U5NTM4ZiIsImlhdCI6MTc0ODg0NzM0M30.H1K7f4FwIXJ-ASUM6aXQ7CCgWO_USDOGvsxltIBXaQx8Oz9sX9hVxf9pCqd1iatlpXDI32nJurQplKRAzoCgfouHTpGMr4Zo84j7dDQTJs-QZE9b8vblffsymm83sVnA34x0bYIH0QVRfPzQ986JwIE8M7qf7TmidjqrcYtJWy-JNTY8fdap6yZdZmdbTu1316snrBAP_gXZHOsM1rOxn3YUtNXZNdXQ7tM68z1Ir8_uX5MUWYe-HHMI_QGT9IZ0HLstSm1Kfs6Y5SODNnln6gStTMSkMngdd_JgfN7I1p2Ewx7x0450cyuAQw-yZigZ2caRPBdAk6952IZXhidcNQ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              